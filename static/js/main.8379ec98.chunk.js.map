{"version":3,"sources":["utils.js","pivots.js","Program.js","SimplexState.js","TableauDisplay.js","examples.js","Input.js","Layout.js","ProgramDisplay.js","InteractiveTableau.js","App.js","reportWebVitals.js","index.js"],"names":["zero","Fraction","one","minusOne","isInteger","fraction","divisible","isIntegral","arr","every","v","isNonNegative","compare","range","n","st","Array","keys","map","i","copyArr","copyArr2D","r","addArrays","a","b","add","scaleArray","mul","last","length","truePrefixSum","reduce","sum","prefSum","push","listToBoolArray","size","res","inverseArray","cutToLength","len","getDefault","slice","concat","updateArr2D","j","val","newArr","updateArr","frMod","mod","floor","sub","ceil","maxFactor","f","exp","fct","decimalFraction","den","d","e2","f2","e5","rep","toString","padStart","s","toLatex","excludeWhole","useDecimal","isAllowedToSelect","selection","type","allowed","isInSelection","selected","isSecondarySelected","state","baseVariables","flipSelection","value","setSelection","pivot","tableau","newTableau","inverse","k","neg","newBaseVariables","nonePivotSuggestion","pivots","row","description","emptyPrimalPivots","emptyDualPivots","calculatePrimalPivots","baseColumns","disallowSlack","results","foundBland","unbounded","minDelta","maxI","div","equals","calculateDualPivots","x","minRatio","minJ","ratio","abs","getZeroFraction","Program","m","A","c","form","labels","this","Acopy","bcopy","ccopy","isBase","invBaseVariables","getStateFromProgram","program","EqualityState","getFromProgram","BasicState","validationFunction","selectedPart","allowedErrorMessage","args","isArray","e","includes","primalGomoryCutTransition","func","label","prompt","defaultSelection","validateArgs","getNewState","dualGomoryCutTransition","columns","standardStatusMessage","canStart","allowPrimalCut","allowDualCut","primalUnbounded","dualUnbounded","iter","primalFeasible","dualFeasible","canPrimalCut","primalSolution","canDualCut","dualSolution","primalProgram","primalLabels","dualLabels","addInfo","dualProgram","setForm","setLabels","addInformation","AuxiliaryState","getFromBasicState","FarkasState","getFromBasic","rows","PrimaryGomory","getFirstCut","cols","DualGomory","calculateSolutions","calculatePivots","calculatePrograms","calculateDisabledColumns","transitions","getPossibleTransitions","primalPivots","dualPivots","suggestedPivots","defaultSuggestion","equalityForm","programs","name","defaultProgram","disabledColumns","disabledRows","FixBaseBasic","baseFixed","backToBasic","addedOverall","initialN","initialM","addGomoryCuts","possibleToRemove","some","removeExtraColumns","rowsUsed","col","tab","newRow","newPrimalLabels","newDualLabels","newPrimalProgram","fromTableau","removedColumns","filter","l","addedRows","columnsAdded","auxiliaryProgram","savedObjective","correctI","minB","getFirstPivotRow","auxiliaryPivot","goBackToBasic","outerIter","undefined","fromArrays","of","dummyTableau","thisRef","hasBase","infeasible","nonePivots","EqualityDualGomory","EqualityFirstStage","getFromEqualityState","stage","goBack","FixBaseEquality","TableauCell","position","hidden","showInvariant","isCorner","isHighlighted","isDisabled","isSelected","isSelectable","showPointer","showSelection","showDisabled","useMixed","onClick","isInner","classes","join","className","cornerCell","onCellClick","miscSettings","bCell","highlightInvariants","objectiveRow","showBase","showBColumnsLeft","showSlackLeft","highlightBase","innerCell","highlightedPivots","canPivot","TableauDisplay","showObjectiveBottom","examples","checkInput","input","test","InputField","onChange","ending","target","ExampleLoading","examplesList","update","parseInt","htmlFor","id","ProgramInput","onFinish","useState","zeroProgram","fieldsA","fieldsB","fieldsC","fieldN","fieldM","selectedExample","setState","updateSize","fn","fm","isNaN","Math","max","min","adjustSizeFields","updateB","updateC","console","log","isDual","isEquality","exampleNum","toFraction","onBlur","required","newForm","style","clear","Fragment","updateA","colSpan","Pane","children","MultiPane","defaultChoice","chosen","setChosen","choice","filteredChildren","flat","props","child","SplitPane","Monomial","first","firstNonZero","lastInEmptyRow","ProgramDisplay","getFirstNonZeroIndex","indexOf","showPrimal","firstNonZeroInTopRow","SlackForm","nonBasicColumns","SolutionDisplay","title","solution","toShow","feasible","SelectSetting","currentValue","options","option","SwitchSetting","color","height","width","onColor","checked","Settings","settings","setSetting","availablePivots","Object","entries","newValue","InteractiveTableau","initialProgram","onStartOver","stateHistory","index","selectedProgram","currentTransition","currentTableau","appendTableau","newTab","setting","disabled","getStatusMessage","transition","errorMessage","makeTransition","correct","error","App","setInitialProgram","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8379ec98.chunk.js","sourcesContent":["// import Fraction from 'fraction.js/bigfraction'\r\nimport Fraction from 'fraction.js'\r\n\r\nexport const zero     = new Fraction(\"0\");\r\nexport const one      = new Fraction(\"1\");\r\nexport const minusOne = new Fraction(\"-1\");\r\n\r\nexport const isInteger = fraction => fraction.divisible(one);\r\nexport const isIntegral = arr => arr.every(v => isInteger(v));\r\nexport const isIntegral2D = arr => arr.every(r => isIntegral(r));\r\nexport const isNonNegative = arr => arr.every(v => v.compare(zero) >= 0);\r\n\r\nexport const range = (n, st=0) => [...Array(n).keys()].map(i => i + st);\r\n\r\nexport const copyArr = arr => [...arr];\r\nexport const copyArr2D = arr => arr.map(r => copyArr(r));\r\n\r\nexport const addArrays  = (a, b) => a.map((v, i) => v.add(b[i]));\r\nexport const scaleArray = (v, a) => v.map(v => v.mul(a));\r\n\r\nexport const last = arr => arr[arr.length - 1];\r\n\r\nexport const countTrue = arr => arr.reduce((count, v) => v ? count + 1 : count, 0);\r\nexport const truePrefixSum = arr => arr.reduce(\r\n                                    ([sum, prefSum], v) => {\r\n                                      sum = v ? sum + 1 : sum;\r\n                                      prefSum.push(sum);\r\n                                      return [sum, prefSum];\r\n                                    }, [0, []]);\r\n\r\nexport const listToBoolArray = (arr, size) => arr.reduce(\r\n                                              (res, v) => {\r\n                                                if (v >= 0) res[v] = true; return res;\r\n                                              }, range(size).map(() => false));\r\n\r\nexport const inverseArray = (arr, size) => arr.reduce(\r\n                                            (res, v, i) => {\r\n                                              if (v >= 0) res[v] = i; return res;\r\n                                            }, range(size).map(() => -1));\r\n\r\nexport const cutToLength = (arr, len, getDefault) => {\r\n  if (arr.length >= len) {\r\n      return arr.slice(0, len);\r\n  }\r\n  return copyArr(arr).concat(\r\n    range(len - arr.length).map(i => getDefault()));\r\n}\r\n\r\nexport const updateArr2D = (arr, i, j, val) => {\r\n  const newArr = copyArr2D(arr);\r\n  newArr[i][j] = val;\r\n  return newArr;\r\n}\r\n\r\nexport const updateArr = (arr, i, val) => {\r\n  const newArr = copyArr(arr);\r\n  newArr[i] = val;\r\n  return newArr;\r\n}\r\n\r\nexport const frMod = (a, b) => a.mod(b).add(b).mod(b);\r\nexport const floor = a => a.sub(frMod(a, one));\r\nexport const ceil  = a => a.add(frMod(one.sub(frMod(a, one)), one));\r\n\r\nconst maxFactor = (f, val) => {\r\n  let exp = 0;\r\n  let fct = 1;\r\n  while (val % f === 0) {\r\n    fct = fct * f;\r\n    val /= f;\r\n    exp ++;\r\n  } \r\n  return [exp, fct];\r\n}\r\n\r\nexport const decimalFraction = val => {\r\n  const den = val.d;\r\n  let [e2, f2] = maxFactor(2, den);\r\n  let [e5, f5] = maxFactor(5, den);\r\n  if (den / (f2 * f5) !== 1) return null;\r\n  let res = val.n;\r\n  while (e2 < e5) { e2 ++; res *= 2; }\r\n  while (e5 < e2) { e5 ++; res *= 5; }\r\n  let rep = res.toString().padStart(e2 + 1, '0');\r\n  return (val.s === -1 ? \"-\" : \"\") + (e2 === 0 ? rep : `${rep.slice(0, -e2)}.${rep.slice(-e2)}`);\r\n}\r\n\r\nexport const toLatex = (val, excludeWhole=false, useDecimal=true) => {\r\n  if (useDecimal) {\r\n    const rep = decimalFraction(val);\r\n    if (rep !== null) return rep;\r\n  }\r\n  return val.toLatex(excludeWhole);\r\n}\r\n\r\nexport function isAllowedToSelect(i, j, selection) {\r\n  switch (selection.type) {\r\n    case \"rows\":\r\n      return selection.allowed[i];\r\n    case \"columns\":\r\n    case \"base_columns\":\r\n      return selection.allowed[j];\r\n    case \"cells\":\r\n      return selection.allowed[i][j];\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nexport function isInSelection(i, j, selection) {\r\n  switch (selection.type) {\r\n    case \"rows\":\r\n      return selection.selected[i];\r\n    case \"columns\":\r\n    case \"base_columns\":\r\n      return selection.selected[j];\r\n    case \"cells\":\r\n      return selection.selected[i][j];\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nexport function isSecondarySelected(i, j, selection, state) {\r\n  return selection.type === 'base_columns' && i > 0 && selection.selected[state.baseVariables[i-1]];\r\n}\r\n\r\nexport function setSelection(i, j, selection, value) {\r\n  switch (selection.type) {\r\n    case \"rows\":\r\n      return {...selection, selected: updateArr(selection.selected, i, value)};\r\n    case \"columns\":\r\n    case \"base_columns\":\r\n      return {...selection, selected: updateArr(selection.selected, j, value)};\r\n    case \"cells\":\r\n      return {...selection, selected: updateArr2D(selection.selected, i, j, value)};\r\n    default:\r\n      return {...selection};\r\n  }\r\n}\r\n\r\nexport function flipSelection(i, j, selection) {\r\n  return setSelection(i, j, selection, !isInSelection(i, j, selection));\r\n}","import { copyArr, copyArr2D, zero, scaleArray, addArrays, last} from './utils'\r\n\r\nexport function pivot(tableau, baseVariables, i, j) {\r\n  const newTableau = copyArr2D(tableau);\r\n  newTableau[i] = scaleArray(newTableau[i], newTableau[i][j].inverse());\r\n  for (let k = 0; k < newTableau.length; k ++) {\r\n    if (k !== i) {\r\n      newTableau[k] = addArrays(newTableau[k], scaleArray(newTableau[i], newTableau[k][j].neg()));\r\n    }\r\n  }\r\n\r\n  const newBaseVariables = copyArr(baseVariables);\r\n  newBaseVariables[i - 1] = j;\r\n  \r\n  return [newTableau, newBaseVariables];\r\n}\r\n\r\nexport function nonePivotSuggestion(tableau) {\r\n  return { pivots: tableau.map(row => row.map(() => false)), description: \"None\"};\r\n}\r\n\r\nexport function emptyPrimalPivots(tableau) {\r\n  return {\r\n    \"generic_primal\": { pivots: tableau.map(row => row.map(() => false)), \r\n                        description: \"Generic pivot for primal simplex\" },\r\n    \"bland_primal\"  : { pivots: tableau.map(row => row.map(() => false)), \r\n                        description: \"Bland's rule for primal simplex\" },\r\n  }\r\n}\r\n\r\nexport function emptyDualPivots(tableau) {\r\n  return {\r\n    \"generic_dual\": { pivots: tableau.map(row => row.map(() => false)), \r\n                      description: \"Generic pivot for dual simplex\" },\r\n    \"bland_dual\"  : { pivots: tableau.map(row => row.map(() => false)), \r\n                      description: \"Bland's rule for dual simplex\" },\r\n  };\r\n}\r\n\r\nexport function calculatePrimalPivots(tableau, baseColumns, disallowSlack=false, n=null) {\r\n  const results = emptyPrimalPivots(tableau);\r\n\r\n  if (!tableau.slice(1).every(row => last(row).compare(zero) >= 0)) \r\n    return [results, false];\r\n\r\n  let foundBland = false;\r\n  let unbounded = false;\r\n  for (let j = 0; j < tableau[0].length - 1; j ++) {\r\n    if (baseColumns[j] || tableau[0][j].compare(zero) >= 0) continue;\r\n    let minDelta = null;\r\n    let maxI = null;\r\n    for (let i = 1; i < tableau.length; i ++) {\r\n      if (tableau[i][j].compare(zero) <= 0) continue;\r\n      if (minDelta === null || minDelta.compare(last(tableau[i]).div(tableau[i][j])) > 0) {\r\n        minDelta = last(tableau[i]).div(tableau[i][j]);\r\n        maxI = i;\r\n      }\r\n    }\r\n    if (minDelta === null) {\r\n      unbounded = true;\r\n      continue;\r\n    }\r\n    for (let i = 1; i < tableau.length; i ++) {\r\n      if (tableau[i][j].compare(zero) <= 0) continue;\r\n      if (minDelta.equals(last(tableau[i]).div(tableau[i][j]))) {\r\n        results[\"generic_primal\"].pivots[i][j] = true;\r\n      }\r\n    }\r\n    if (!foundBland) {\r\n      foundBland = true;\r\n      results[\"bland_primal\"].pivots[maxI][j] = true;\r\n    }\r\n  }\r\n  if (disallowSlack) {\r\n    results[\"generic_primal\"].pivots = results[\"generic_primal\"].pivots.map(row => row.map((v, j) => j < n && v));\r\n    results[\"bland_primal\"].pivots = results[\"bland_primal\"].pivots.map(row => row.map((v, j) => j < n && v));\r\n  }\r\n  return [results, unbounded];\r\n}\r\n\r\nexport function calculateDualPivots(tableau, disallowSlack=false, n=null) {\r\n  const results = emptyDualPivots(tableau);\r\n  if (!tableau[0].slice(0, -1).every(x => x.compare(zero) >= 0))\r\n    return [results, false];\r\n\r\n  let foundBland = false;\r\n  let unbounded = false;\r\n\r\n  for (let i = 1; i < tableau.length; i ++) {\r\n    if (last(tableau[i]).compare(0) >= 0) continue;\r\n    let minRatio = null;\r\n    let minJ = null;\r\n    for (let j = 0; j < tableau[i].length - 1; j ++) {\r\n      if (tableau[i][j].compare(zero) >= 0) continue;\r\n      const ratio = tableau[0][j].div(tableau[i][j]).abs();\r\n      if (minRatio === null || ratio.compare(minRatio) < 0) {\r\n        minRatio = ratio;\r\n        minJ = j;\r\n      }\r\n    }\r\n    if (minRatio === null) {\r\n      unbounded = true;\r\n      continue;\r\n    }\r\n    for (let j = 0; j < tableau[i].length - 1; j ++) {\r\n      if (tableau[i][j].compare(zero) >= 0) continue;\r\n      if (minRatio.equals(tableau[0][j].div(tableau[i][j]).abs())) {\r\n        results[\"generic_dual\"].pivots[i][j] = true;\r\n      }\r\n    }\r\n    if (!foundBland) {\r\n      foundBland = true;\r\n      results[\"bland_dual\"].pivots[i][minJ] = true;\r\n    }\r\n  }\r\n  if (disallowSlack) {\r\n    results[\"generic_dual\"].pivots = results[\"generic_dual\"].pivots.map(row => row.map((v, j) => j < n && v));\r\n    results[\"bland_dual\"].pivots = results[\"bland_dual\"].pivots.map(row => row.map((v, j) => j < n && v));\r\n  }\r\n  return [results, unbounded];\r\n}","import { range, copyArr, copyArr2D, zero, last, cutToLength, isIntegral, isIntegral2D, updateArr2D, updateArr, listToBoolArray, inverseArray } from './utils'\r\nimport { pivot } from './pivots'\r\n// import Fraction from 'fraction.js/bigfraction'\r\nimport Fraction from 'fraction.js'\r\n\r\nconst getZeroFraction = () => zero;\r\nconst getZeroRow = len => () => range(len).map(() => zero);\r\n\r\nexport default class Program {\r\n  constructor({n, m, A, b, c, form, labels=null}) {\r\n    this.n = n;\r\n    this.m = m;\r\n    this.A = A;\r\n    this.b = b;\r\n    this.c = c;  \r\n    this.form = form;\r\n    this.labels = labels !== null ? labels :\r\n      form === 'primal' || form === \"equality\" ? \r\n        range(n).map(i => `x_{${i + 1}}`) : range(m).map(i => `y_{${i + 1}}`);\r\n  }\r\n\r\n  static zeroProgram(n, m) {\r\n    return new Program({n: n, m: m, \r\n      A: range(m).map(() => range(n).map(() => zero)),\r\n      b: range(m).map(() => zero),\r\n      c: range(n).map(() => zero),\r\n      form: 'primal',\r\n    });\r\n  }\r\n\r\n  static fromArrays(A, b, c, form='primal', labels=null) {\r\n    return new Program({n: c.length, m: b.length, \r\n      A: A.map(r => r.map(v => Fraction(v))),\r\n      b: b.map(v => Fraction(v)),\r\n      c: c.map(v => Fraction(v)),\r\n      form: form,\r\n      labels: labels\r\n    });\r\n  }\r\n\r\n  static fromTableau(n, m, tableau, baseVariables, labels) {\r\n    let isBase = listToBoolArray(baseVariables, n + m);\r\n\r\n    for (let j = 0; j < m; j ++) {\r\n      if (isBase[n + j]) continue;\r\n\r\n      for (let i = 1; i <= m; i ++) {\r\n        if (!tableau[i][n + j].equals(zero) && baseVariables[i-1] < n) {\r\n          [tableau, baseVariables] = pivot(tableau, baseVariables, i, n + j);\r\n          isBase = listToBoolArray(baseVariables, n + m);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const invBaseVariables = inverseArray(baseVariables, n + m);\r\n    tableau = [tableau[0]].concat(range(m).map(j => tableau[invBaseVariables[n + j]+1]));\r\n\r\n    return new Program({\r\n      n: n, m: m,\r\n      A: range(m).map(i => range(n).map(j => tableau[i+1][j])),\r\n      b: range(m).map(i => last(tableau[i+1])),\r\n      c: range(n).map(j => tableau[0][j].neg()),\r\n      form: 'primal',\r\n      labels: labels.slice(0, n),\r\n    })\r\n  }\r\n\r\n  isDual() {\r\n    return this.form === 'dual' || this.form === 'equality_dual';\r\n  }\r\n\r\n  isEquality() {\r\n    return this.form === 'equality' || this.form === 'equality_dual';\r\n  }\r\n\r\n  copy() {\r\n    return new Program({\r\n      ...this,\r\n      A: copyArr2D(this.A),\r\n      b: copyArr(this.b),\r\n      c: copyArr(this.c),\r\n    });\r\n  }\r\n\r\n  updateSize(n, m) {\r\n    const Acopy = cutToLength(\r\n        this.A.map(row => cutToLength(row, n, getZeroFraction)), \r\n        m, getZeroRow(n));\r\n    const bcopy = cutToLength(this.b, m, getZeroFraction);\r\n    const ccopy = cutToLength(this.c, n, getZeroFraction);\r\n\r\n    return new Program({n: n, m: m, A: Acopy, b: bcopy, c: ccopy, form: this.form});\r\n  }\r\n\r\n  updateA(i, j, val) {\r\n    return new Program({\r\n      ...this,\r\n      A: updateArr2D(this.A, i, j, val)\r\n    })\r\n  }\r\n\r\n  updateB(i, val) {\r\n    return new Program({\r\n      ...this,\r\n      b: updateArr(this.b, i, val)\r\n    })\r\n  }\r\n\r\n  updateC(j, val) {\r\n    return new Program({\r\n      ...this,\r\n      c: updateArr(this.c, j, val)\r\n    })\r\n  }\r\n\r\n  setForm(f) {\r\n    return new Program({\r\n      ...this,\r\n      form: f,\r\n      labels: null\r\n    });\r\n  }\r\n\r\n  setLabels(labels) {\r\n    return new Program({\r\n      ...this,\r\n      labels: labels\r\n    })\r\n  }\r\n\r\n  isIntegral() {\r\n    return isIntegral2D(this.A) && isIntegral(this.b) && isIntegral(this.c);\r\n  }\r\n}","import { copyArr, copyArr2D, range, zero, one, minusOne, floor, ceil, \r\n  last, isInteger, isIntegral, isNonNegative, truePrefixSum, listToBoolArray, inverseArray} from './utils'\r\nimport { InlineMath } from 'react-katex'\r\nimport Program from './Program';\r\nimport { pivot, calculatePrimalPivots, calculateDualPivots, nonePivotSuggestion, emptyDualPivots, emptyPrimalPivots } from './pivots'\r\n\r\nexport function getStateFromProgram(program) {\r\n  if (program.form === 'equality' || program.form === 'equality_dual')\r\n    return EqualityState.getFromProgram(program);\r\n  else\r\n    return BasicState.getFromProgram(program);\r\n}\r\n\r\nfunction validationFunction(allowed, selectedPart, allowedErrorMessage) {\r\n  return args => {\r\n    if (!Array.isArray(args) || !args.every(e => typeof e === 'boolean')) \r\n      return [false, \"Argument must be an array of booleans\"];\r\n    if (!args.every((v, i) => !v || allowed[i]))\r\n      return [false, allowedErrorMessage];\r\n    if (!args.includes(true))\r\n      return [false, `At least one ${selectedPart} must be selected.`];\r\n    return [true, null];\r\n  };\r\n}\r\n\r\nfunction primalGomoryCutTransition(state, func) {\r\n  const allowed = range(state.m + 1).map(i => !isInteger(last(state.tableau[i])));\r\n  return {\r\n    label: \"Add Gomory cuts for primal LP\",\r\n    args: \"rows\",\r\n    prompt: \"Select rows to use in making cuts\",\r\n    allowed: allowed,\r\n    defaultSelection: range(state.m + 1).map(() => false),\r\n    validateArgs: validationFunction(allowed, \"row\", \"Only rows with non integer value in the last column can be used.\"),\r\n    getNewState: func\r\n  };\r\n}\r\n\r\nfunction dualGomoryCutTransition(state, func) {\r\n  const allowed = range(state.columns).map(i => !isInteger(state.tableau[0][i]));\r\n  return {\r\n    label: \"Add Gomory cuts for dual LP\",\r\n    args: \"columns\",\r\n    prompt: \"Select columns to use in making cuts\",\r\n    allowed: allowed,\r\n    defaultSelection: range(state.columns).map(() => false),\r\n    validateArgs: validationFunction(allowed, \"column\", \"Only columns with non integer value in the first row can be used.\"),\r\n    getNewState: func\r\n  }\r\n}\r\n\r\nfunction standardStatusMessage(state, canStart=true, allowPrimalCut=true, allowDualCut=true) {\r\n  if (state.primalUnbounded) {\r\n    return <p>The primal LP is unbounded.</p>;\r\n  } else if (state.dualUnbounded) {\r\n    return <p>The dual LP is unbounded.</p>;\r\n  } else if(state.iter === 0 && !state.primalFeasible && canStart) {\r\n    if (state.dualFeasible) {\r\n      return <p>Use the dual simplex method. Alternatively use an auxiliary LP or Farkas lemma to find a feasible primal solution</p>;\r\n    }\r\n    return <p>Use an auxiliary LP or Farkas lemma to find a feasible primal solution</p>;\r\n  } else if (state.primalFeasible && state.dualFeasible) {\r\n    let canPrimalCut = !isIntegral(state.primalSolution) && allowPrimalCut;\r\n    let canDualCut = !isIntegral(state.dualSolution) && state.primalProgram.isIntegral() && allowDualCut;\r\n    if (canPrimalCut && canDualCut) {\r\n      return <p>The LP is optimized, but the primal and dual solutions aren't integral. You can use Gomory cuts to look for integral solutions.</p>\r\n    } else if (canPrimalCut) {\r\n      return <p>The LP is optimized, but the primal solution isn't integral. You can use Gomory cuts to look for an integral solution.</p>\r\n    } else if (canDualCut) {\r\n      return <p>The LP is optimized, but the dual solution isn't integral. You can use Gomory cuts to look for an integral solution.</p>\r\n    }\r\n    return <p>An optimal solution has been reached.</p>;\r\n  } else if (state.primalFeasible) {\r\n    return <p>Use the primal simplex method to optimize the LP.</p>;\r\n  } else if (state.dualFeasible) {\r\n    return <p>Use the dual simplex method to optimize the LP.</p>;\r\n  }\r\n  return <p></p>;\r\n}\r\n\r\nclass BasicState {\r\n  constructor({tableau, n, m, primalLabels, dualLabels, baseVariables, primalProgram, iter, columns, addInfo=true}) {\r\n    this.tableau = tableau;\r\n    this.n = n;\r\n    this.m = m;\r\n    this.columns = columns;\r\n    this.primalLabels = primalLabels;\r\n    this.dualLabels = dualLabels;\r\n    this.baseVariables = baseVariables;\r\n    this.primalProgram = primalProgram;\r\n    this.dualProgram = primalProgram.setForm(primalProgram.form === 'primal' ? 'dual' : 'equality_dual').setLabels(this.dualLabels);\r\n    this.iter = iter;\r\n\r\n    if (addInfo)\r\n      this.addInformation();\r\n  }\r\n\r\n  static getFromProgram(program) {\r\n    let tableau = [\r\n      program.c.map(v => v.neg()).concat(\r\n        range(program.m + 1).map(() => zero))\r\n    ].concat(\r\n      program.A.map((row, i) =>\r\n        row.concat(\r\n          range(program.m).map(v => v === i ? one : zero)\r\n        ).concat(program.b[i])\r\n      )\r\n    );\r\n    \r\n    const primalLabels = range(program.n).map(i => `x_{${i+1}}`)\r\n          .concat(range(program.m).map(i => `s_{${i+1}}`));\r\n    const dualLabels = range(program.m).map(i => `y_{${i+1}}`);\r\n    const baseVariables = range(program.m).map(i => program.n + i);\r\n  \r\n    return new BasicState({\r\n      tableau: tableau,\r\n      n: program.n,\r\n      m: program.m,\r\n      columns: program.n + program.m + 1,\r\n      primalLabels: primalLabels,\r\n      dualLabels: dualLabels,\r\n      baseVariables: baseVariables,\r\n      primalProgram: program.form === \"dual\" ? program.setForm(\"primal\") : program,\r\n      iter: 0,\r\n    });\r\n  }\r\n\r\n  getStatusMessage() {\r\n    return standardStatusMessage(this);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.primalUnbounded || this.dualUnbounded) {\r\n      return [];\r\n    } else if(this.iter === 0 && !this.primalFeasible) {\r\n      return [{ \r\n          label: \"Make an auxiliary LP\", \r\n          args: \"none\",\r\n          getNewState: () => AuxiliaryState.getFromBasicState(this) \r\n        }, { \r\n          label: \"Use Farkas Lemma\", \r\n          args: \"none\",\r\n          getNewState: () => FarkasState.getFromBasic(this)\r\n      }];\r\n    } else if (this.primalFeasible && this.dualFeasible) {\r\n      let res = [];\r\n      if (!isIntegral(this.primalSolution)) {\r\n        res.push(primalGomoryCutTransition(this, rows => PrimaryGomory.getFirstCut(this, rows)))\r\n      }\r\n      if (!isIntegral(this.dualSolution) && this.primalProgram.isIntegral()) {\r\n        res.push(dualGomoryCutTransition(this, cols => DualGomory.getFirstCut(this, cols)));\r\n      }\r\n      return res;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  addInformation() {  \r\n    this.isBase = listToBoolArray(this.baseVariables, this.columns - 1);\r\n    \r\n    this.calculateSolutions();\r\n    this.calculatePivots();\r\n    this.calculatePrograms();\r\n    this.calculateDisabledColumns();\r\n\r\n    this.transitions = this.getPossibleTransitions();\r\n  }\r\n\r\n  calculatePivots() {\r\n    const [primalPivots, primalUnbounded] = calculatePrimalPivots(this.tableau, this.isBase);\r\n    const [dualPivots  , dualUnbounded ] = calculateDualPivots(this.tableau);\r\n\r\n    this.suggestedPivots = {\r\n      \"none\": nonePivotSuggestion(this.tableau),\r\n      ...primalPivots,\r\n      ...dualPivots,\r\n    }\r\n    this.defaultSuggestion = \"bland_primal\";\r\n    this.primalUnbounded = primalUnbounded;\r\n    this.dualUnbounded  = dualUnbounded;\r\n  }\r\n\r\n  calculateSolutions() {\r\n    this.primalFeasible = isNonNegative(this.tableau.slice(1).map(r => last(r)));\r\n    this.dualFeasible   = isNonNegative(this.tableau[0].slice(0, -1));\r\n\r\n    this.primalSolution = range(this.columns - 1).map(() => zero);\r\n    for (let i = 0; i < this.m; i ++) {\r\n      this.primalSolution[this.baseVariables[i]] = last(this.tableau[i+1]);\r\n    }\r\n\r\n    if (!this.primalProgram.equalityForm) {\r\n      this.dualSolution = Array(this.m);\r\n      for (let i = 0; i < this.m; i ++) {\r\n        this.dualSolution[i] = this.tableau[0][i + this.n];\r\n      }\r\n    }\r\n  }\r\n\r\n  calculatePrograms() {\r\n    this.programs = [{\r\n      name: \"Primal LP\",\r\n      program: this.primalProgram,\r\n    }, {\r\n      name: \"Dual LP\",\r\n      program: this.dualProgram,\r\n    }];\r\n    this.defaultProgram = \"Primal LP\";\r\n  }\r\n\r\n  calculateDisabledColumns() {\r\n    this.disabledColumns = range(this.columns).map(() => false);\r\n    this.disabledRows = this.tableau.map(() => false);\r\n  }\r\n\r\n  canPivot(i, j) {\r\n    return !(j === this.columns - 1 || i === 0  ||\r\n            this.tableau[i][j].equals(zero) ||\r\n            this.isBase[j]);\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new BasicState({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass FixBaseBasic extends BasicState {\r\n  constructor(args) {\r\n    super({...args, addInfo: false});\r\n    this.baseFixed = this.baseVariables.every(v => this.tableau[0][v].equals(zero));\r\n    this.addInformation();\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.baseFixed)\r\n      return <p>The top row is fixed.</p>\r\n    return <p>Make pivots to represent the top row in the new base.</p>\r\n  }\r\n\r\n  canPivot(i, j) {\r\n    return this.isBase[j] && !this.tableau[0][j].equals(zero) && this.tableau[i][j].equals(one);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.baseFixed) {\r\n      return [{\r\n        label: \"Continue\", \r\n        args: \"none\",\r\n        getNewState: () => this.backToBasic()\r\n      }];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  backToBasic() {\r\n    return new BasicState({...this});\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new FixBaseBasic({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    });\r\n  }\r\n}\r\n\r\nclass PrimaryGomory extends BasicState {\r\n  constructor({addedOverall, initialN, initialM, ...args}) {\r\n    super({...args, addInfo: false});\r\n    this.addedOverall = addedOverall;\r\n    this.initialN = initialN;\r\n    this.initialM = initialM;\r\n    this.addInformation();\r\n  }\r\n\r\n  static getFirstCut(state, rows) {\r\n    return (new PrimaryGomory({\r\n      ...state,\r\n      addedOverall: 0,\r\n      initialN: state.n,\r\n      initialM: state.m,\r\n    })).addGomoryCuts(rows);\r\n  }\r\n\r\n  getStatusMessage() {\r\n    return standardStatusMessage(this, false, true, false);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.primalUnbounded || this.dualUnbounded) {\r\n      return [];\r\n    } else if (this.primalFeasible && this.dualFeasible) {\r\n      let res = [];\r\n      if (!isIntegral(this.primalSolution)) {\r\n        res.push(primalGomoryCutTransition(this, rows => this.addGomoryCuts(rows)))\r\n        const possibleToRemove = range(this.columns).map(j => (j >= this.initialN + this.initialM && j < this.columns - 1) && this.isBase[j]);\r\n        if (possibleToRemove.some(v => v)) {\r\n          res.push({\r\n            label: \"Remove superfluous cuts\",\r\n            args: \"base_columns\",\r\n            prompt: \"Select columns to remove\",\r\n            allowed: possibleToRemove,\r\n            defaultSelection: range(this.columns).map(() => false),\r\n            validateArgs: validationFunction(possibleToRemove, \"column\", \"Only columns added with Gomory cuts that are currently in the base can be removed.\"),\r\n            getNewState: cols => this.removeExtraColumns(cols)\r\n          })\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  addGomoryCuts(rows) {\r\n    let newTableau = copyArr2D(this.tableau);\r\n    let newBaseVariables = copyArr(this.baseVariables);\r\n    let rowsUsed = 0;\r\n    for (let i = 0; i <= this.m; i ++) {\r\n      if (!rows[i]) continue;\r\n      const col = this.tableau[0].length + rowsUsed;\r\n      const tab = newTableau;\r\n      const newRow = range(col + 1).map(j => \r\n        j === col     ? tab[i][col-1].sub(floor(tab[i][col-1])).neg() :\r\n        j === col - 1 ? one : \r\n        tab[i][j].sub(floor(tab[i][j])).neg());\r\n      newTableau = tab.map(row => row.slice(0, col-1).concat(zero, row[col-1]))\r\n                      .concat([newRow]);\r\n      newBaseVariables.push(col - 1);                      \r\n      rowsUsed ++;\r\n    }\r\n    const newPrimalLabels = this.primalLabels.concat(range(rowsUsed).map(i => `s_{${this.initialM + this.addedOverall + i + 1}}`));\r\n    const newDualLabels = this.dualLabels.concat(range(rowsUsed).map(i => `y_{${this.initialM + this.addedOverall + i + 1}}`));\r\n    const newPrimalProgram = Program.fromTableau(this.n, this.m + rowsUsed, newTableau, newBaseVariables, newPrimalLabels)\r\n\r\n    return new PrimaryGomory({\r\n      ...this,\r\n      m: this.m + rowsUsed,\r\n      columns: this.columns + rowsUsed,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      dualLabels: newDualLabels,\r\n      primalProgram: newPrimalProgram,\r\n      iter: this.iter + 1,\r\n      addedOverall: this.addedOverall + rowsUsed,\r\n    });\r\n  }\r\n\r\n  removeExtraColumns(cols) {\r\n    const [removedColumns, prefSum] = truePrefixSum(cols);\r\n    const newTableau = this.tableau.filter((r, i) => i === 0 ? true : !cols[this.baseVariables[i-1]]).map(row => row.filter((v, j) => !cols[j]));\r\n    const newBaseVariables = this.baseVariables.filter(v => !cols[v]).map(v => v - prefSum[v]);\r\n    const newPrimalLabels = this.primalLabels.filter((l, i) => !cols[i]);\r\n    const newDualLabels = this.dualLabels.filter((l, i) => !cols[i + this.n]);\r\n    const newPrimalProgram = Program.fromTableau(this.n, this.m - removedColumns, newTableau, newBaseVariables, newPrimalLabels)\r\n    return new PrimaryGomory({\r\n      ...this,\r\n      m: this.m - removedColumns,\r\n      columns: this.columns - removedColumns,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      dualLabels: newDualLabels,\r\n      primalProgram: newPrimalProgram,\r\n    })\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new PrimaryGomory({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass DualGomory extends BasicState {\r\n  constructor({initialN, addedOverall, ...args}) {\r\n    super({...args, addInfo: false});\r\n    this.initialN = initialN;\r\n    this.addedOverall = addedOverall;\r\n\r\n    this.addInformation();\r\n  }\r\n\r\n  static getFirstCut(state, cols) {\r\n    return (new DualGomory({\r\n      ...state,\r\n      initialN: state.n,\r\n      addedOverall: 0,\r\n    })).addGomoryCuts(cols);\r\n  }\r\n\r\n  getStatusMessage() {\r\n    return standardStatusMessage(this, false, false, true);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.primalUnbounded || this.dualUnbounded) {\r\n      return [];\r\n    } else if (this.primalFeasible && this.dualFeasible) {\r\n      let res = [];\r\n\r\n      if (!isIntegral(this.dualSolution)) {\r\n        res.push(dualGomoryCutTransition(this, cols => this.addGomoryCuts(cols)));\r\n\r\n        const possibleToRemove = range(this.columns).map(i => i >= this.initialN && i < this.n && !this.isBase[i]);\r\n        if (possibleToRemove.some(v => v)) {\r\n          res.push({\r\n            label: \"Remove superfluous cuts\",\r\n            args: \"columns\",\r\n            prompt: \"Select columns to remove\",\r\n            allowed: possibleToRemove,\r\n            defaultSelection: range(this.columns).map(() => false),\r\n            validateArgs: validationFunction(possibleToRemove, \"column\", \"Only columns added with Gomory cuts that are not currently in the base can be removed.\"),\r\n            getNewState: cols => this.removeExtraColumns(cols)\r\n          })\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  addGomoryCuts(cols) {\r\n    let addedRows = range(this.m + 1).map(() => []);\r\n    let columnsAdded = 0;\r\n    for (let j = 0; j <= this.columns; j ++) {\r\n      if (!cols[j]) continue;\r\n      addedRows = addedRows.map((row, i) =>\r\n        i === 0 ? \r\n        row.concat(this.tableau[i][j].sub( ceil(this.tableau[i][j]))) :\r\n        row.concat(this.tableau[i][j].sub(floor(this.tableau[i][j])))\r\n      );\r\n      columnsAdded ++;\r\n    }\r\n    const newTableau = this.tableau.map((row, i) => row.slice(0, this.n).concat(addedRows[i]).concat(row.slice(this.n)));\r\n    const newBaseVariables = this.baseVariables.map(v => v >= this.n ? v + columnsAdded : v);\r\n    const newPrimalLabels = this.primalLabels.slice(0, this.n)\r\n                .concat(range(columnsAdded).map(i => `x_{${this.initialN + this.addedOverall + i + 1}}`))\r\n                .concat(this.primalLabels.slice(this.n));\r\n    const newPrimalProgram = Program.fromTableau(this.n + columnsAdded, this.m, newTableau, newBaseVariables, newPrimalLabels);\r\n    return new DualGomory({\r\n      ...this,\r\n      n: this.n + columnsAdded,\r\n      columns: this.columns + columnsAdded,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      primalProgram: newPrimalProgram,\r\n      addedOverall: this.addedOverall + columnsAdded,\r\n    });\r\n  }\r\n\r\n  removeExtraColumns(cols) {\r\n    const [removedColumns, prefSum] = truePrefixSum(cols);\r\n    const newTableau = this.tableau.map(row => row.filter((v, j) => !cols[j]));\r\n    const newBaseVariables = this.baseVariables.map(v => v - prefSum[v]);\r\n    const newPrimalLabels = this.primalLabels.filter((l, i) => !cols[i]);\r\n    const newPrimalProgram = Program.fromTableau(this.n - removedColumns, this.m, newTableau, newBaseVariables, newPrimalLabels);\r\n    return new DualGomory({\r\n      ...this,\r\n      n: this.n - removedColumns,\r\n      columns: this.columns - removedColumns,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      primalProgram: newPrimalProgram,\r\n    })\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new DualGomory({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass AuxiliaryState extends BasicState {\r\n  constructor({auxiliaryProgram, savedObjective, ...args}) {\r\n    super({...args, addInfo: false});\r\n    this.auxiliaryProgram = auxiliaryProgram;\r\n    this.savedObjective = savedObjective;\r\n    this.addInformation();\r\n  }\r\n\r\n  static getFromBasicState(state) {\r\n    return new AuxiliaryState({\r\n      ...state,\r\n      auxiliaryProgram: Program.fromArrays(\r\n        state.primalProgram.A.map(r => Array.of(minusOne).concat(r)),\r\n        state.primalProgram.b,\r\n        Array.of(minusOne).concat(range(state.primalProgram.c.length).map(() => zero)),\r\n        \"primal\",\r\n        Array.of(\"x_{0}\").concat(state.primalLabels.slice(0, state.n)),\r\n      ),\r\n      tableau: state.tableau.map((row, i) => i === 0 ? \r\n        range(state.columns + 1).map(i => i === 0 ? one : zero) : \r\n        Array.of(minusOne).concat(row)),\r\n      n: state.n + 1,\r\n      columns: state.columns + 1,\r\n      primalLabels: Array.of(\"x_{0}\").concat(state.primalLabels),\r\n      baseVariables: state.baseVariables.map(x => x + 1),\r\n      savedObjective: state.tableau[0],\r\n      iter: 0,\r\n    });\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.primalFeasible && this.dualFeasible) {\r\n      if (this.primalSolution[0].equals(zero)) {\r\n        return <p>The auxiliary LP is optimized and <InlineMath>x_0</InlineMath> \r\n        equals to 0, so we can return to the original LP</p>;;\r\n      } else {\r\n        return <p>The auxiliary LP is optimized, but <InlineMath>x_0</InlineMath> \r\n        is not equal to 0, so the original LP is infeasible</p>;\r\n      }\r\n    } else if (this.iter === 0) {\r\n      if (this.dualFeasible)\r\n        return <p>The primal solution is not feasible, pivot with <InlineMath>x_0</InlineMath> as the entering \r\n        variable and as the leaving the one with the lowest value in the current basic solution. Alternatively use the dual simplex algorithm.</p>;\r\n      return <p>The primal solution is not feasible, pivot with <InlineMath>x_0</InlineMath> as the entering \r\n      variable and as the leaving the one with the lowest value in the current basic solution.</p>;\r\n    } else {\r\n      return <p>Optimize the auxiliary LP to find a feasible basic solution to the initial\r\n      LP or determine that it is infeasible</p>;\r\n    }\r\n  }\r\n\r\n  getFirstPivotRow() {\r\n    let correctI = -1;\r\n    let minB = zero;\r\n    for (let k = 1; k <= this.m; k ++) {\r\n      if (last(this.tableau[k]).compare(minB) < 0) {\r\n        minB = last(this.tableau[k]);\r\n        correctI = k;\r\n      }\r\n    }\r\n    return correctI;\r\n  }\r\n\r\n  calculatePivots() {\r\n    const [primalPivots, primalUnbounded] = calculatePrimalPivots(this.tableau, this.isBase);\r\n    const [dualPivots  , dualUnbounded ] = calculateDualPivots(this.tableau);\r\n\r\n    this.suggestedPivots = {\r\n      \"none\": nonePivotSuggestion(this.tableau),\r\n      ...primalPivots,\r\n      ...dualPivots,\r\n    }\r\n\r\n    if (this.iter === 0) {\r\n      const row = this.getFirstPivotRow();\r\n      const auxiliaryPivot = this.tableau.map((r, i) => r.map((v, j) => (i === row && j === 0)));\r\n\r\n      this.suggestedPivots = {\r\n        ...this.suggestedPivots,\r\n        \"generic_primal\": { pivots: auxiliaryPivot, description: \"Generic pivot for primal simplex\"},\r\n        \"bland_primal\": { pivots: auxiliaryPivot, description: \"Bland's rule for primal simplex\"},\r\n      };\r\n    }\r\n    this.defaultSuggestion = \"bland_primal\";\r\n    this.primalUnbounded = primalUnbounded;\r\n    this.dualUnbounded  = dualUnbounded;\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.primalFeasible && this.dualFeasible && this.primalSolution[0].equals(zero)) {\r\n      return [{ \r\n        label: \"Return to initial LP\", \r\n        args: \"none\",\r\n        getNewState: () => this.goBackToBasic() \r\n      }];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  goBackToBasic() {\r\n    const newTableau = this.tableau.map(r => r.slice(1));\r\n    newTableau[0] = this.savedObjective;\r\n  \r\n    return new FixBaseBasic({\r\n      ...this,\r\n      tableau: newTableau,\r\n      n: this.n - 1,\r\n      columns: this.columns - 1,\r\n      primalLabels: this.primalLabels.slice(1),\r\n      baseVariables: this.baseVariables.map(x => x - 1),\r\n      iter: this.outerIter + 1,\r\n    });\r\n  }\r\n\r\n  calculatePrograms() {\r\n    if (this.auxiliaryProgram === undefined) return;\r\n    this.programs = [{\r\n      name: \"Auxiliary LP\",\r\n      program: this.auxiliaryProgram,\r\n    },{\r\n      name: \"Dual auxiliary LP\",\r\n      program: this.auxiliaryProgram.setForm('dual'),\r\n    }];\r\n    this.defaultProgram = \"Auxiliary LP\";\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new AuxiliaryState({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass FarkasState extends BasicState {\r\n  constructor({...args}) {\r\n    super(args);\r\n  }\r\n  static getFromBasic(state) {\r\n    return new FarkasState({\r\n      ...state,\r\n      primalProgram: new Program({\r\n        ...state.primalProgram,\r\n        c: state.primalProgram.c.map(() => zero)\r\n      })\r\n    });\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.primalFeasible) {\r\n      return <p>A feasible primal solution has been found.</p>;\r\n    } else if (this.dualUnbounded) {\r\n      return <p>The initial LP is primal infeasible.</p>;\r\n    } else {\r\n      return <p>Use dual simplex method to find a feasible primal solution.</p>;\r\n    }\r\n  }\r\n\r\n  calculatePivots() {\r\n    const dummyTableau = this.tableau.map((row, i) =>\r\n       i === 0 ? range(this.columns).map(() => zero) : row);\r\n    const [primalPivots, primalUnbounded] = calculatePrimalPivots(dummyTableau, this.isBase);\r\n    const [dualPivots  , dualUnbounded ] = calculateDualPivots(dummyTableau);\r\n\r\n    this.suggestedPivots = {\r\n      \"none\": nonePivotSuggestion(this.tableau),\r\n      ...primalPivots,\r\n      ...dualPivots,\r\n    }\r\n    this.primalUnbounded = primalUnbounded;\r\n    this.dualUnbounded  = dualUnbounded;\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    const thisRef = this;\r\n    if (this.primalFeasible) {\r\n      return [\r\n      { \r\n        label: \"Go back to the initial LP\", \r\n        args: \"none\",\r\n        getNewState: () => new BasicState(thisRef) \r\n      }];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new FarkasState({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass EqualityState extends BasicState {\r\n  constructor(args) {\r\n    super(args);\r\n    this.calculateDisabledColumns();\r\n    this.hasBase = this.baseVariables.every((v, i) => v !== -1 || this.disabledRows[i + 1]);\r\n    this.infeasible = range(this.m, 1).some(i => range(this.n).every(j => this.tableau[i][j].compare(zero) < 0 || j === this.baseVariables[i-1]) \r\n                                            && !last(this.tableau[i]).equals(zero) && !this.disabledRows[i]);\r\n    this.addInformation();\r\n  }\r\n\r\n  static getFromProgram(program) {\r\n    let tableau = [\r\n      program.c.map(v => v.neg()).concat(\r\n        range(program.m + 1).map(() => zero))\r\n    ].concat(\r\n      program.A.map((row, i) =>\r\n        row.concat(\r\n          range(program.m).map(v => v === i ? (program.b[i].compare(zero) < 0 ? minusOne : one) : zero)\r\n        ).concat(program.b[i])\r\n      )\r\n    );\r\n    \r\n    const primalLabels = range(program.n).map(i => `x_{${i+1}}`)\r\n          .concat(range(program.m).map(i => `s_{${i+1}}`));\r\n    const dualLabels = range(program.m).map(i => `y_{${i+1}}`);\r\n    const baseVariables = range(program.m).map(() => -1);\r\n  \r\n    return new EqualityState({\r\n      tableau: tableau,\r\n      n: program.n,\r\n      m: program.m,\r\n      columns: program.n + program.m + 1,\r\n      primalLabels: primalLabels,\r\n      dualLabels: dualLabels,\r\n      baseVariables: baseVariables,\r\n      primalProgram: program.setForm('equality'),\r\n      iter: 0,\r\n    });\r\n  }\r\n\r\n  calculatePivots() {\r\n    const nonePivots = nonePivotSuggestion(this.tableau);\r\n    if (!this.hasBase || this.infeasible) {\r\n      this.suggestedPivots = {\r\n        \"none\": nonePivots,\r\n        ...emptyDualPivots(this.tableau),\r\n        ...emptyPrimalPivots(this.tableau),\r\n      }\r\n      this.defaultSuggestion = \"none\";\r\n      this.primalUnbounded = false;\r\n      this.dualUnbounded  = false;\r\n    } else {\r\n      const [primalPivots, primalUnbounded] = calculatePrimalPivots(this.tableau, this.isBase, true, this.n);\r\n      const [dualPivots  , dualUnbounded ] = calculateDualPivots(this.tableau, true, this.n);\r\n\r\n      this.suggestedPivots = {\r\n        \"none\": nonePivots,\r\n        ...primalPivots,\r\n        ...dualPivots,\r\n      }\r\n      this.defaultSuggestion = \"bland_primal\";\r\n      this.primalUnbounded = primalUnbounded;\r\n      this.dualUnbounded  = dualUnbounded;\r\n    }\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.infeasible) {\r\n      return <p>The primal LP is infeasible.</p>\r\n    } else if (!this.hasBase) {\r\n      if (this.iter === 0)\r\n        return <p>Find a base by making pivots or following an algorithm.</p>\r\n      return <p>Find a base by making pivots.</p>\r\n    } else {\r\n      return standardStatusMessage(this, false, false, true);\r\n    }\r\n  }\r\n\r\n  calculateSolutions() {\r\n    this.primalFeasible = isNonNegative(this.tableau.slice(1).map(r => last(r)));\r\n    this.dualFeasible   = isNonNegative(this.tableau[0].slice(0, this.n));\r\n\r\n    this.primalSolution = range(this.n).map(() => zero);\r\n    for (let i = 0; i < this.m; i ++) {\r\n      if (this.baseVariables[i] !== -1 && this.baseVariables[i] < this.n)\r\n        this.primalSolution[this.baseVariables[i]] = last(this.tableau[i+1]);\r\n    }\r\n\r\n    this.dualSolution = Array(this.m);\r\n    for (let i = 0; i < this.m; i ++) {\r\n      this.dualSolution[i] = this.tableau[0][i + this.n];\r\n    }\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (!this.hasBase) {\r\n      if (this.iter === 0)\r\n        return [{ \r\n          label: \"Find a base\", \r\n          args: \"none\",\r\n          getNewState: () => EqualityFirstStage.getFromEqualityState(this) \r\n        }];\r\n    } else if (this.primalFeasible && this.dualFeasible) {\r\n      if (!isIntegral(this.dualSolution) && this.primalProgram.isIntegral()) {\r\n        return [dualGomoryCutTransition(this, cols => EqualityDualGomory.getFirstCut(this, cols))];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  calculateDisabledColumns() {\r\n    this.disabledColumns = range(this.columns).map(i => i >= this.n && i < this.columns - 1);\r\n    this.disabledRows = range(this.m + 1).map(i => i > 0 && range(this.n).every(j => this.tableau[i][j].equals(zero)) && last(this.tableau[i]).equals(zero));\r\n  }\r\n\r\n  canPivot(i, j) {\r\n    return !(j >= this.n || i === 0  ||\r\n            this.tableau[i][j].equals(zero) ||\r\n            this.isBase[j]);\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new EqualityState({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass EqualityFirstStage extends EqualityState {\r\n  constructor({savedObjective, ...args}) {\r\n    super({...args, addInfo: false});\r\n    this.savedObjective = savedObjective;\r\n    \r\n    if (this.baseVariables.some(v => v === -1)) {\r\n      this.stage = 'base';\r\n    } else {\r\n      if (this.primalFeasible && this.dualFeasible) {\r\n        const invBaseVariables = inverseArray(this.baseVariables, this.n + this.m);\r\n        if (last(this.tableau[0]).compare(zero) < 0) {\r\n          this.stage = 'infeasible';\r\n        } else if (range(this.m, this.n).some(j => this.isBase[j] && \r\n            range(this.n).some(i => !this.tableau[invBaseVariables[j]+1][i].equals(zero)))) {\r\n          this.stage = 'rebase';\r\n        } else {\r\n          this.stage = 'done';\r\n        }\r\n      } else {\r\n        this.stage = 'optimize';\r\n      }\r\n    }\r\n\r\n    this.addInformation();\r\n  }\r\n\r\n\r\n  static getFromEqualityState(state) {\r\n    return new EqualityFirstStage({\r\n      ...state,\r\n      tableau: state.tableau.map((row, i) => i === 0 ? \r\n          row.map((v, j) => (j < state.n || j === state.columns - 1) ? zero : one) : row),\r\n      savedObjective: state.tableau[0],\r\n    });\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.stage === 'base') {\r\n      return <p>Make pivots with slack variables to establish a base.</p>\r\n    } else if (this.stage === 'done') {\r\n      return <p>The program is optimized. We can return to the initial program.</p>\r\n    } else if (this.stage === 'optimize') {\r\n      return <p>Optimize the LP using the simplex method.</p>\r\n    } else if (this.stage === 'rebase') {\r\n      return <p>Remove the slack variables from base where possible.</p>\r\n    } else if (this.stage === 'infeasible') {\r\n      return <p>The initial LP is infeasible.</p>\r\n    }\r\n    return <p></p>;\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.stage === 'done') {\r\n      if (last(this.tableau[0]).compare(zero) === 0)\r\n        return [{\r\n          label: \"Return to initial LP\", \r\n          args: \"none\",\r\n          getNewState: () => this.goBack() \r\n        }];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  goBack() {\r\n    const newTableau = this.tableau.map((row, i) => i === 0 ? this.savedObjective : row);\r\n\r\n    return new FixBaseEquality({\r\n      ...this,\r\n      tableau: newTableau,\r\n    });\r\n  }\r\n\r\n  calculatePivots() {\r\n    if (this.stage !== 'optimize') {\r\n      this.suggestedPivots = {\r\n        \"none\": nonePivotSuggestion(this.tableau),\r\n        ...emptyDualPivots(this.tableau),\r\n        ...emptyPrimalPivots(this.tableau),\r\n      }\r\n      this.defaultSuggestion = \"none\";\r\n      this.primalUnbounded = false;\r\n      this.dualUnbounded  = false;\r\n    } else {\r\n      const [primalPivots, primalUnbounded] = calculatePrimalPivots(this.tableau, this.isBase);\r\n      const [dualPivots  , dualUnbounded ] = calculateDualPivots(this.tableau);\r\n\r\n      this.suggestedPivots = {\r\n        \"none\": nonePivotSuggestion(this.tableau),\r\n        ...primalPivots,\r\n        ...dualPivots,\r\n      }\r\n      this.defaultSuggestion = \"bland_primal\";\r\n      this.primalUnbounded = primalUnbounded;\r\n      this.dualUnbounded  = dualUnbounded;\r\n    }\r\n  }\r\n\r\n  calculateDisabledColumns() {\r\n    this.disabledColumns = range(this.columns).map(() => false);\r\n    this.disabledRows = range(this.m + 1).map(() => false);\r\n  }\r\n\r\n  canPivot(i, j) {\r\n    if (this.stage === 'base')\r\n      return (this.baseVariables[i-1] === -1) && (i === j - this.n + 1) && !this.isBase[j];\r\n    if (this.stage === 'optimize')\r\n      return !(j === this.columns - 1 || i === 0  ||\r\n        this.tableau[i][j].equals(zero) ||\r\n        this.isBase[j]);\r\n    if (this.stage === 'rebase') \r\n      return !(j === this.columns - 1 || i === 0  ||\r\n        this.tableau[i][j].equals(zero) ||\r\n        this.isBase[j]) && this.baseVariables[i-1] >= this.n && j < this.n;\r\n    return false;\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new EqualityFirstStage({\r\n      ...this,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      iter: this.iter + 1,\r\n    })\r\n  }\r\n}\r\n\r\nclass FixBaseEquality extends EqualityState {\r\n  constructor(args) {\r\n    super({...args, addInfo: false});\r\n    this.baseFixed = this.baseVariables.every(v => this.tableau[0][v].equals(zero));\r\n    this.addInformation();\r\n  }\r\n\r\n  getStatusMessage() {\r\n    if (this.baseFixed)\r\n      return <p>The top row is fixed.</p>\r\n    return <p>Make pivots to represent the top row in the new base.</p>\r\n  }\r\n\r\n  canPivot(i, j) {\r\n    return this.isBase[j] && !this.tableau[0][j].equals(zero) && this.tableau[i][j].equals(one);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.baseFixed) {\r\n      return [{\r\n        label: \"Continue\", \r\n        args: \"none\",\r\n        getNewState: () => this.backToBasic()\r\n      }];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  backToBasic() {\r\n    return new EqualityState({...this});\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new FixBaseEquality({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    });\r\n  }\r\n}\r\n\r\nclass EqualityDualGomory extends EqualityState {\r\n  constructor({initialN, addedOverall, ...args}) {\r\n    super(args);\r\n    this.initialN = initialN;\r\n    this.addedOverall = addedOverall;\r\n\r\n    this.addInformation();\r\n  }\r\n\r\n  static getFirstCut(state, cols) {\r\n    return (new EqualityDualGomory({\r\n      ...state,\r\n      initialN: state.n,\r\n      addedOverall: 0,\r\n    })).addGomoryCuts(cols);\r\n  }\r\n\r\n  getStatusMessage() {\r\n    return standardStatusMessage(this, false, false, true);\r\n  }\r\n\r\n  getPossibleTransitions() {\r\n    if (this.primalUnbounded || this.dualUnbounded) {\r\n      return [];\r\n    } else if (this.primalFeasible && this.dualFeasible) {\r\n      let res = [];\r\n\r\n      if (!isIntegral(this.dualSolution)) {\r\n        res.push(dualGomoryCutTransition(this, cols => this.addGomoryCuts(cols)));\r\n\r\n        const possibleToRemove = range(this.columns).map(i => i >= this.initialN && i < this.n && !this.isBase[i]);\r\n        if (possibleToRemove.some(v => v)) {\r\n          res.push({\r\n            label: \"Remove superfluous cuts\",\r\n            args: \"columns\",\r\n            prompt: \"Select columns to remove\",\r\n            allowed: possibleToRemove,\r\n            defaultSelection: range(this.columns).map(() => false),\r\n            validateArgs: validationFunction(possibleToRemove, \"column\", \"Only columns added with Gomory cuts that are not currently in the base can be removed.\"),\r\n            getNewState: cols => this.removeExtraColumns(cols)\r\n          })\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  addGomoryCuts(cols) {\r\n    let addedRows = range(this.m + 1).map(() => []);\r\n    let columnsAdded = 0;\r\n    for (let j = 0; j <= this.columns; j ++) {\r\n      if (!cols[j]) continue;\r\n      addedRows = addedRows.map((row, i) =>\r\n        i === 0 ? \r\n        row.concat(this.tableau[i][j].sub( ceil(this.tableau[i][j]))) :\r\n        row.concat(this.tableau[i][j].sub(floor(this.tableau[i][j])))\r\n      );\r\n      columnsAdded ++;\r\n    }\r\n    const newTableau = this.tableau.map((row, i) => row.slice(0, this.n).concat(addedRows[i]).concat(row.slice(this.n)));\r\n    const newBaseVariables = this.baseVariables.map(v => v >= this.n ? v + columnsAdded : v);\r\n    const newPrimalLabels = this.primalLabels.slice(0, this.n)\r\n                .concat(range(columnsAdded).map(i => `x_{${this.initialN + this.addedOverall + i + 1}}`))\r\n                .concat(this.primalLabels.slice(this.n));\r\n    const newPrimalProgram = Program.fromTableau(this.n + columnsAdded, this.m, newTableau, newBaseVariables, newPrimalLabels).setForm('equality');\r\n    return new EqualityDualGomory({\r\n      ...this,\r\n      n: this.n + columnsAdded,\r\n      columns: this.columns + columnsAdded,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      primalProgram: newPrimalProgram,\r\n      addedOverall: this.addedOverall + columnsAdded,\r\n    });\r\n  }\r\n\r\n  removeExtraColumns(cols) {\r\n    const [removedColumns, prefSum] = truePrefixSum(cols);\r\n    const newTableau = this.tableau.map(row => row.filter((v, j) => !cols[j]));\r\n    const newBaseVariables = this.baseVariables.map(v => v - prefSum[v]);\r\n    const newPrimalLabels = this.primalLabels.filter((l, i) => !cols[i]);\r\n    const newPrimalProgram = Program.fromTableau(this.n - removedColumns, this.m, newTableau, newBaseVariables, newPrimalLabels);\r\n    return new EqualityDualGomory({\r\n      ...this,\r\n      n: this.n - removedColumns,\r\n      columns: this.columns - removedColumns,\r\n      tableau: newTableau,\r\n      baseVariables: newBaseVariables,\r\n      primalLabels: newPrimalLabels,\r\n      primalProgram: newPrimalProgram,\r\n    })\r\n  }\r\n\r\n  pivot(i, j) {\r\n    const [newTableau, newBaseVariables] = pivot(this.tableau, this.baseVariables, i, j);\r\n    \r\n    return new EqualityDualGomory({\r\n      ...this,\r\n      baseVariables: newBaseVariables,\r\n      tableau: newTableau,\r\n      iter: this.iter + 1,\r\n    });\r\n  }\r\n}","import { InlineMath } from 'react-katex'\r\nimport { range, zero, toLatex, isInSelection, isAllowedToSelect, last, isSecondarySelected } from './utils'\r\nimport './Tableau.scss'\r\n\r\nfunction TableauCell({\r\n  value,\r\n  position = \"inner\",\r\n  hidden = false,\r\n  showInvariant = false, \r\n  isBase = false,  \r\n  isCorner = false, \r\n  isHighlighted = false, \r\n  isDisabled = false,\r\n  isSelected = false,\r\n  isSelectable = false,\r\n  isSecondarySelected = false,\r\n  showPointer = true,\r\n  showSelection = false,\r\n  showDisabled = true,\r\n  useDecimal = true,\r\n  useMixed = false,\r\n  onClick = f => f, \r\n}) {\r\n  const isInner = position === 'inner';\r\n  const isNonNegative = value.compare(zero) >= 0;\r\n  const classes = [\r\n    \"tableau-cell\",\r\n    `cell-${position}`,\r\n    showInvariant &&  isNonNegative && !isDisabled ? \"invariant-holds\"  : \"\",\r\n    showInvariant && !isNonNegative && !isDisabled ? \"invariant-broken\" : \"\",\r\n    showPointer && \r\n        ((!isDisabled && isInner && !showSelection) ||\r\n        (showSelection && isSelectable))  ? \"clickable-cell\"      : \"\",\r\n    hidden                                ? \"hidden-cell\"         : \"\",\r\n    isCorner                              ? \"corner-cell\"         : \"\",\r\n    isBase && (isInner || !showInvariant) ? \"base-cell\"           : \"\",\r\n    isHighlighted && !showSelection       ? \"highlighted-cell\"    : \"\",\r\n    showSelection && isSelected           ? \"selected-cell\"       : \"\",\r\n    showSelection && !isSelectable        ? \"not-selectable-cell\" : \"\",\r\n    showSelection && isSecondarySelected  ? \"secondary-cell\"      : \"\",\r\n    showDisabled && !showSelection && \r\n      isDisabled                          ? \"disabled-cell\"       : \"\",\r\n  ].join(' ');\r\n  \r\n  return (\r\n    <td\r\n     className={classes}\r\n     onClick={onClick}\r\n    >\r\n      <InlineMath>{toLatex(value, useMixed, useDecimal)}</InlineMath>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction cornerCell({state, position, selection, showSelection, onCellClick, miscSettings}) {\r\n  return <TableauCell \r\n    value={last(state.tableau[0])}\r\n    position={position}\r\n    isSelected={showSelection && isInSelection(0, state.columns - 1, selection)}\r\n    isSelectable={showSelection && isAllowedToSelect(0, state.columns - 1, selection)}\r\n    isSecondarySelected={showSelection && isSecondarySelected(0, state.columns - 1, selection, state)}\r\n    onClick={() => onCellClick(0, state.columns - 1)}\r\n    {...{...miscSettings, showSelection}}\r\n  />;\r\n}\r\n\r\nfunction bCell({state, i, position, selection, showSelection, onCellClick, highlightInvariants, miscSettings}) {\r\n  return <TableauCell \r\n    value={last(state.tableau[i])}\r\n    position={position}\r\n    showInvariant={highlightInvariants}\r\n    isDisabled={state.disabledRows[i]}\r\n    isSelected={showSelection && isInSelection(i, state.columns - 1, selection)}\r\n    isSelectable={showSelection && isAllowedToSelect(i, state.columns - 1, selection)}\r\n    isSecondarySelected={showSelection && isSecondarySelected(i, state.columns - 1, selection, state)}\r\n    onClick={() => onCellClick(i, state.columns - 1)}\r\n    {...{...miscSettings, showSelection}}\r\n  />;\r\n}\r\n\r\nfunction objectiveRow({state, position, selection, showSelection, showBase, onCellClick, showBColumnsLeft, showSlackLeft, highlightBase, highlightInvariants, miscSettings}) {\r\n  return <tr>\r\n    <td></td>\r\n    {!showBColumnsLeft ? null :\r\n      cornerCell({state, position: `${position}-left`, selection, onCellClick, showSelection, miscSettings})}\r\n    {!showSlackLeft ? null : range(state.m).map(j => \r\n      <TableauCell \r\n        key={state.n + j}\r\n        value={state.tableau[0][state.n + j]}\r\n        position={position}\r\n        showInvariant={highlightInvariants}\r\n        hidden={state.isBase[state.n + j] && !state.disabledColumns[state.n + j] && !showBase}\r\n        isDisabled={state.disabledColumns[state.n + j]}\r\n        isBase={state.isBase[state.n + j] && highlightBase}\r\n        isSelected={showSelection && isInSelection(0, state.n + j, selection)}\r\n        isSelectable={showSelection && isAllowedToSelect(0, state.n + j, selection)}\r\n        isSecondarySelected={showSelection && isSecondarySelected(0, state.n + j, selection, state)}\r\n        onClick={() => onCellClick(0, state.n + j)}\r\n        {...{...miscSettings, showSelection}}\r\n      />\r\n    )}\r\n    {range(state.n).map(j => \r\n      <TableauCell \r\n        key={j}\r\n        value={state.tableau[0][j]}\r\n        position={position}\r\n        showInvariant={highlightInvariants}\r\n        hidden={state.isBase[j] && !state.disabledColumns[j] && !showBase}\r\n        isDisabled={state.disabledColumns[j]}\r\n        isBase={state.isBase[j] && highlightBase}\r\n        isSelected={showSelection && isInSelection(0, j, selection)}\r\n        isSelectable={showSelection && isAllowedToSelect(0, j, selection)}\r\n        isSecondarySelected={showSelection && isSecondarySelected(0, j, selection, state)}\r\n        onClick={() => onCellClick(0, j)}\r\n        {...{...miscSettings, showSelection}}\r\n      />\r\n    )}\r\n    {showSlackLeft ? null : range(state.m).map(j => \r\n      <TableauCell \r\n        key={j}\r\n        value={state.tableau[0][state.n + j]}\r\n        position={position}\r\n        showInvariant={highlightInvariants}\r\n        hidden={state.isBase[state.n + j] && !state.disabledColumns[state.n + j] && !showBase}\r\n        isDisabled={state.disabledColumns[state.n + j]}\r\n        isBase={state.isBase[state.n + j] && highlightBase}\r\n        isSelected={showSelection && isInSelection(0, state.n + j, selection)}\r\n        isSelectable={showSelection && isAllowedToSelect(0, state.n + j, selection)}\r\n        isSecondarySelected={showSelection && isSecondarySelected(0, state.n + j, selection, state)}\r\n        onClick={() => onCellClick(0, state.n + j)}\r\n        {...{...miscSettings, showSelection}}\r\n      />\r\n    )}\r\n    {showBColumnsLeft ? null :\r\n      cornerCell({state, position: `${position}-right`, selection, onCellClick, showSelection, miscSettings})}\r\n  </tr>;\r\n}\r\n\r\nfunction innerCell({state, i, j, highlightedPivots, showBase, highlightBase, selection, showSelection, onCellClick, miscSettings}) {\r\n  return <TableauCell \r\n    key={j}\r\n    value={state.tableau[i][j]}\r\n    hidden={state.isBase[j] && !state.disabledColumns[j] && !showBase}\r\n    isBase={state.isBase[j] && !state.disabledColumns[j] && highlightBase}\r\n    isHighlighted={state.suggestedPivots[highlightedPivots].pivots[i][j]}\r\n    isSelected={showSelection && isInSelection(i, j, selection)}\r\n    isSelectable={showSelection && isAllowedToSelect(i, j, selection)}\r\n    isSecondarySelected={showSelection && isSecondarySelected(i, j, selection, state)}\r\n    isDisabled={!state.canPivot(i, j)}\r\n    onClick={() => onCellClick(i, j)}\r\n    {...{...miscSettings, showSelection}}\r\n  />;\r\n}\r\n\r\nfunction TableauDisplay({\r\n  state, \r\n  onCellClick = f => f, \r\n  highlightedPivots = \"none\", \r\n  highlightBase = true,\r\n  highlightInvariants = true,\r\n  useDecimal = true,\r\n  useMixed = false,\r\n  showBase = true,\r\n  selection = null,\r\n  showPointer = true,\r\n  showDisabled = false,\r\n  showObjectiveBottom = false,\r\n  showBColumnsLeft = false,\r\n  showSlackLeft = false,\r\n}) {\r\n  const showSelection = selection !== null;\r\n  const miscSettings = {useDecimal, useMixed, showPointer, showDisabled};\r\n  return (\r\n    <div className=\"tableau-box\">\r\n      <table className=\"tableau-table\">\r\n        <tbody>\r\n          {showObjectiveBottom ? null :\r\n            objectiveRow({state, position: \"top\", selection, showSelection, showBase, onCellClick, showBColumnsLeft, showSlackLeft, highlightBase, highlightInvariants, miscSettings})\r\n          }\r\n          {range(state.m, 1).map(i => \r\n            <tr key={i}>\r\n              <td>\r\n                <InlineMath>\r\n                  {i === 0 ? \"\" : \r\n                    (state.baseVariables[i-1] < 0\r\n                    || state.disabledColumns[state.baseVariables[i-1]]\r\n                    || state.disabledRows[i]) ? \"-\"  :\r\n                    state.primalLabels[state.baseVariables[i-1]]}\r\n                </InlineMath>\r\n              </td>\r\n              {!showBColumnsLeft ? null :\r\n                bCell({state, i, position: \"left\", selection, showSelection, showBase, onCellClick, highlightInvariants, miscSettings})}\r\n              {!showSlackLeft ? null : range(state.m, state.n).map(j => \r\n                innerCell({state, i, j, highlightedPivots, showBase, highlightBase, selection, showSelection, onCellClick, miscSettings})\r\n              )}\r\n              {range(state.n).map(j => \r\n                innerCell({state, i, j, highlightedPivots, showBase, highlightBase, selection, showSelection, onCellClick, miscSettings})\r\n              )}\r\n              {showSlackLeft ? null : range(state.m, state.n).map(j => \r\n                innerCell({state, i, j, highlightedPivots, showBase, highlightBase, selection, showSelection, onCellClick, miscSettings})\r\n              )}\r\n              {showBColumnsLeft ? null :\r\n                bCell({state, i, position: \"right\", selection, showSelection, showBase, onCellClick, highlightInvariants, miscSettings})}\r\n            </tr>\r\n          )}\r\n          {!showObjectiveBottom ? null :\r\n            objectiveRow({state, position: \"bottom\", selection, showSelection, showBase, onCellClick, showBColumnsLeft, showSlackLeft, highlightBase, highlightInvariants, miscSettings})}\r\n          <tr>\r\n            <td></td>\r\n            {showBColumnsLeft ? <td></td> : null}\r\n            {!showSlackLeft ? null : range(state.m).map(j => \r\n              <td key={state.n + j}>\r\n                <InlineMath>\r\n                  {state.primalLabels[state.n + j]}\r\n                </InlineMath>\r\n              </td>\r\n            )}\r\n            {range(state.n).map(j => \r\n              <td key={j}>\r\n                <InlineMath>\r\n                  {state.primalLabels[j]}\r\n                </InlineMath>\r\n              </td>\r\n            )}\r\n            {showSlackLeft ? null : range(state.m).map(j => \r\n              <td key={state.n + j}>\r\n                <InlineMath>\r\n                  {state.primalLabels[state.n + j]}\r\n                </InlineMath>\r\n              </td>\r\n            )}\r\n            {!showBColumnsLeft ? <td></td> : null}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { TableauDisplay };","import Program from './Program'\r\n\r\nconst examples = [\r\n  {\r\n    name: \"Simple 1\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1, 3],\r\n        [2, 2, 5],\r\n        [4, 1, 2]\r\n      ],\r\n      [30, 24, 36],\r\n      [3, 1, 2],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Simple 2\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1],\r\n        [1, 0],\r\n        [0, 1]\r\n      ],\r\n      [20, 12, 16],\r\n      [18, 12.5],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Basic solution not feasible\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [2, -1],\r\n        [1, -5]\r\n      ],\r\n      [2, -4],\r\n      [2, -1],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Basic solution not feasible 2\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [-2, \"-7.5\", 3],\r\n        [-20, -5, -3],\r\n      ],\r\n      [-10000, -30000],\r\n      [-1, -1, -1],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Infeasible\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [-1, -1, 0],\r\n        [0, -1, -1],\r\n        [1, 2, 1],\r\n      ],\r\n      [-2, -3, 4],\r\n      [1, 1, 1],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Unbounded\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, -1, 1],\r\n        [-2, 1, 0],\r\n        [0, 1, -2]\r\n      ],\r\n      [5, 3, 5],\r\n      [0, 2, 1],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Dual unbounded\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 0],\r\n        [3, 2],\r\n      ],\r\n      [1, -1],\r\n      [-2, 0],\r\n      \"dual\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Gomory cuts\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [-1, 1],\r\n        [8, 2],\r\n      ],\r\n      [2, 17],\r\n      [\"5.5\", \"2.1\"],\r\n      \"primal\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Equality Form\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1, 1],\r\n        [2, 2, 5],\r\n      ],\r\n      [5, 16],\r\n      [3, 1, 2],\r\n      \"equality\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Equality Form 2\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [-1, -1, -1],\r\n        [2, 2, 3],\r\n      ],\r\n      [-8, 16],\r\n      [3, 1, 2],\r\n      \"equality\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Equality infeasible\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1, 1],\r\n        [2, 2, 5],\r\n      ],\r\n      [12, 16],\r\n      [3, 1, 2],\r\n      \"equality\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Equality redundant row\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1],\r\n        [2, 3],\r\n        [3, 4],\r\n      ],\r\n      [4, 9, 13],\r\n      [1, 1],\r\n      \"equality\"\r\n    )\r\n  },\r\n  {\r\n    name: \"Equality redundant row 2\",\r\n    program: Program.fromArrays(\r\n      [\r\n        [1, 1, 1, 3],\r\n        [2, 3, 1, 2],\r\n        [3, 4, 2, 5],\r\n      ],\r\n      [4, 9, 13],\r\n      [1, 1, 1, 1],\r\n      \"equality\"\r\n    )\r\n  },\r\n]\r\n\r\nexport default examples;","// import Fraction from 'fraction.js/bigfraction'\r\nimport Fraction from 'fraction.js'\r\nimport React, { useState } from 'react';\r\nimport { InlineMath } from 'react-katex';\r\nimport { getStateFromProgram } from './SimplexState'\r\nimport { TableauDisplay } from './TableauDisplay'\r\nimport Program from './Program';\r\nimport examples from './examples'\r\nimport { cutToLength, range, zero, updateArr, updateArr2D } from './utils'\r\nimport './Input.scss'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nconst MAX_N = 7;\r\nconst MAX_M = 7;\r\n\r\nfunction checkInput(input) {\r\n  const re = /^-?((\\d+(\\/[1-9]\\d*)?)|(\\d*\\.\\d+)|(\\d+\\.))$/;\r\n  return re.test(input);\r\n}\r\n\r\nfunction InputField({value, onChange, ending}) { \r\n  return (\r\n    <div className=\"input-field\">\r\n      <input \r\n        className={checkInput(value) ? \"correct-input\" : \"wrong-input\"}\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n      <span className=\"label\">\r\n        <InlineMath>\r\n          {ending}\r\n        </InlineMath>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ExampleLoading({examplesList, selected, onChange}) {\r\n  function update(val) {\r\n    onChange(val, parseInt(val) !== -1 ? examplesList[val].program : null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-row\">\r\n      <label htmlFor=\"example\">Example:</label>\r\n      <select \r\n        id=\"example\"\r\n        value={selected}\r\n        onChange={e => update(e.target.value)}\r\n      >\r\n        <option value={-1}>Custom</option>\r\n        {examplesList.map((e, i) =>\r\n          <option\r\n            key={i}\r\n            value={i}\r\n          >{e.name}</option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProgramInput({onFinish}) {\r\n  const [state, setState] = useState({\r\n    program: Program.zeroProgram(2, 1),\r\n    fieldsA: [[\"0\", \"0\"]],\r\n    fieldsB: [\"0\"],\r\n    fieldsC: [\"0\", \"0\"],\r\n    fieldN: \"2\",\r\n    fieldM: \"1\",\r\n    selectedExample: -1,\r\n  });\r\n\r\n  const updateSize = (fn, fm) => {\r\n    let n = parseInt(fn);\r\n    let m = parseInt(fm);\r\n    n = isNaN(n) ? state.program.n : Math.max(Math.min(n, MAX_N), 1);\r\n    m = isNaN(m) ? state.program.m : Math.max(Math.min(m, MAX_M), 1);\r\n    \r\n    setState({\r\n      ...state,\r\n      program: state.program.updateSize(n, m),\r\n      fieldsA: cutToLength(\r\n        state.fieldsA.map(row => cutToLength(row, n, () => \"0\")), \r\n        m, () => range(n).map(i => \"0\")),\r\n      fieldsB: cutToLength(state.fieldsB, m, () => \"0\"),\r\n      fieldsC: cutToLength(state.fieldsC, n, () => \"0\"),\r\n      fieldN: fn,\r\n      fieldM: fm,\r\n    });\r\n  }\r\n\r\n  const adjustSizeFields = () => {\r\n    let n = parseInt(state.fieldN);\r\n    let m = parseInt(state.fieldM);\r\n    n = isNaN(n) ? state.program.n : Math.max(Math.min(n, MAX_N), 1);\r\n    m = isNaN(m) ? state.program.m : Math.max(Math.min(m, MAX_M), 1);\r\n\r\n    updateSize(n.toString(), m.toString());\r\n  }\r\n\r\n  const updateA = (i, j, val) => {\r\n    setState({\r\n      ...state, \r\n      program: state.program.updateA(i, j, checkInput(val) ? new Fraction(val) : zero),\r\n      fieldsA: updateArr2D(state.fieldsA, i, j, val),\r\n      selectedExample: -1\r\n    });\r\n  }\r\n  const updateB = (i, val)    => { \r\n    setState({\r\n      ...state, \r\n      program: state.program.updateB(i, checkInput(val) ? new Fraction(val) : zero),\r\n      fieldsB: updateArr(state.fieldsB, i, val),\r\n      selectedExample: -1\r\n    });\r\n  }\r\n  const updateC = (j, val)    => {\r\n    setState({\r\n      ...state, \r\n      program: state.program.updateC(j, checkInput(val) ? new Fraction(val) : zero),\r\n      fieldsC: updateArr(state.fieldsC, j, val),\r\n      selectedExample: -1\r\n    });\r\n  }\r\n\r\n  const setForm = newForm => {\r\n    setState({\r\n      ...state,\r\n      program: state.program.setForm(newForm),\r\n      selectedExample: -1\r\n    })\r\n  }\r\n\r\n  function reset() {\r\n    setState({\r\n      ...state,\r\n      program: Program.zeroProgram(2, 1),\r\n      fieldsA: [[\"0\", \"0\"]],\r\n      fieldsB: [\"0\"],\r\n      fieldsC: [\"0\", \"0\"],\r\n      fieldN: \"2\",\r\n      fieldM: \"1\",\r\n      selectedExample: -1\r\n    });\r\n  }\r\n\r\n  function selectExample(exampleNum, program) {\r\n    if (program === null) {\r\n      setState({\r\n        ...state,\r\n        selectedExample: exampleNum\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        program: program,\r\n        fieldsA: program.A.map(row => row.map(v => v.toFraction())),\r\n        fieldsB: program.b.map(v => v.toFraction()),\r\n        fieldsC: program.c.map(v => v.toFraction()),\r\n        fieldN: program.n.toString(),\r\n        fieldM: program.m.toString(),\r\n        selectedExample: exampleNum\r\n      });  \r\n    }\r\n  }\r\n\r\n  console.log(state);\r\n\r\n  const isDual = state.program.isDual();\r\n  const isEquality = state.program.isEquality();\r\n\r\n  return (\r\n    <>\r\n    <ExampleLoading \r\n      examplesList={examples}\r\n      selected={state.selectedExample}\r\n      onChange={selectExample}\r\n    />\r\n    <div className=\"input-row\">\r\n      <label htmlFor=\"n\">{\"Variables:\"}</label>\r\n      <input \r\n        type=\"number\"\r\n        id=\"n\"\r\n        min=\"1\"\r\n        max={isDual ? MAX_M : MAX_N}\r\n        value={isDual ? state.fieldM : state.fieldN}\r\n        onChange={isDual ? (e => updateSize(state.fieldN, e.target.value)) :\r\n                           (e => updateSize(e.target.value, state.fieldM))}\r\n        onBlur={adjustSizeFields}\r\n        required\r\n      />\r\n      <label htmlFor=\"m\">{isEquality ? \"Equalities\" : \"Inequalities:\"}</label>\r\n      <input \r\n        type=\"number\"\r\n        id=\"m\"\r\n        min=\"1\"\r\n        max={isDual ? MAX_N : MAX_M}\r\n        value={isDual ? state.fieldN : state.fieldM}\r\n        onChange={isDual ? (e => updateSize(e.target.value, state.fieldM)) :\r\n                           (e => updateSize(state.fieldN, e.target.value))}\r\n        onBlur={adjustSizeFields}\r\n        required\r\n      />\r\n      <label htmlFor=\"form\">Form:</label>\r\n      <select \r\n        id=\"form\"\r\n        value={state.program.form}\r\n        onChange={e => setForm(e.target.value)}\r\n      >\r\n          <option value=\"primal\">Standard form</option>\r\n          <option value=\"dual\">Dual to standard form</option>\r\n          <option value=\"equality\">Equality form</option>\r\n          <option value=\"equality_dual\">Dual to equality form</option>\r\n      </select>\r\n    </div>\r\n    <div className=\"input-row\">\r\n      <button onClick={() => onFinish(state.program)}>Finish</button>\r\n      <button onClick={reset}>Reset</button>\r\n    </div>\r\n    <div style={{clear: \"both\"}}></div>\r\n    <table id=\"input-table\"><tbody>\r\n      <tr>\r\n        <td className=\"min-max\"><InlineMath>{isDual ? \"min\" : \"max\"}</InlineMath></td>\r\n        {range(isDual ? state.program.m : state.program.n).map(i =>\r\n          <React.Fragment key={i}>\r\n            <td>\r\n              <InputField\r\n                value={isDual ? state.fieldsB[i] : state.fieldsC[i]}\r\n                onChange={isDual ? (val => updateB(i, val)) : (val => updateC(i, val))}\r\n                ending={state.program.labels[i]}\r\n              />\r\n            </td>\r\n            <td>\r\n              <InlineMath>\r\n                {(i !== (isDual ? state.program.m : state.program.n) - 1 ? \"+\" : \"\")}\r\n              </InlineMath>\r\n            </td>\r\n          </React.Fragment>\r\n        )}\r\n      </tr>\r\n      {range(isDual ? state.program.n : state.program.m).map(i =>\r\n        <tr key={i}>\r\n          <td></td>\r\n          {range(isDual ? state.program.m : state.program.n).map(j =>\r\n            <React.Fragment key={j}>\r\n              <td key={j}>\r\n                <InputField\r\n                  value={isDual ? state.fieldsA[j][i] : state.fieldsA[i][j]}\r\n                  onChange={val => updateA(isDual ? j : i, isDual ? i : j, val)}\r\n                  ending={state.program.labels[j]}\r\n                />\r\n              </td>\r\n              <td>\r\n                <InlineMath>\r\n                  {(j !== (isDual ? state.program.m : state.program.n) - 1 ? \"+\" : \r\n                          (isDual ? \"\\\\geq\" : isEquality ? \"=\" : \"\\\\leq\"))}\r\n                </InlineMath>\r\n              </td>\r\n            </React.Fragment>\r\n          )}\r\n          <td>\r\n            <InputField\r\n              key={i}\r\n              value={isDual ? state.fieldsC[i] : state.fieldsB[i]}\r\n              onChange={isDual ? (val => updateC(i, val)) : (val => updateB(i, val))}\r\n              ending=\"\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      )}\r\n      {(isEquality && isDual) ? <tr><td></td></tr> :\r\n        <tr>\r\n          <td \r\n            colSpan={2 * (isDual ? state.program.m : state.program.n)}\r\n            className=\"variable-list\"\r\n          >\r\n            <InlineMath>{state.program.labels.join(',')}</InlineMath>\r\n          </td>\r\n          <td><InlineMath>\\geq</InlineMath></td>\r\n          <td><InlineMath>0</InlineMath></td>\r\n        </tr>}\r\n    </tbody></table>\r\n    <TableauDisplay\r\n      state={getStateFromProgram(state.program)}\r\n      showPointer={false}\r\n    />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport { ProgramInput };","import './Layout.scss'\r\n\r\nexport function Pane({name, label, children}) {\r\n  return (\r\n    <div className=\"pane\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function MultiPane({defaultChoice, chosen, setChosen, children}) {\r\n  let choice = chosen;\r\n  const filteredChildren = children.flat().filter(c => c !== null);\r\n  if (!filteredChildren.some(c => c.props.name === chosen)) {\r\n    choice = defaultChoice;\r\n    setChosen(defaultChoice);\r\n  }\r\n  return (\r\n    <div className={\"multi-pane\"}>\r\n      <div className={\"pane-list\"}>\r\n        {filteredChildren.map((child, i) =>\r\n          <div\r\n            key={i} \r\n            className={`pane-button ${choice === child.props.name ? \"pane-button-selected\" : \"\"}`}\r\n            onClick={() => setChosen(child.props.name)}\r\n          >\r\n            {child.props.label}\r\n          </div>\r\n        )}\r\n        <div style={{clear: \"both\"}}></div>\r\n      </div>\r\n      {filteredChildren.map((child, i) =>\r\n        <div key={i} className={`${choice !== child.props.name ? \"pane-hidden\" : \"\"}`}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SplitPane({children}) {\r\n  return (\r\n    <div className=\"split-pane\">\r\n      <div className=\"split\">{children[0]}</div>\r\n      <div className=\"split-border\"></div>\r\n      <div className=\"split\">{children[1]}</div>\r\n    </div>\r\n  );\r\n}","import { InlineMath } from 'react-katex';\r\nimport { range, zero, one, minusOne, toLatex } from './utils'\r\nimport './Program.scss'\r\n\r\nfunction Monomial({\r\n  value, \r\n  label, \r\n  first = false, \r\n  firstNonZero = false, \r\n  lastInEmptyRow = false,\r\n  useDecimal = true,\r\n  useMixed = true,\r\n}) {\r\n  return first ? (\r\n    <td>\r\n      <InlineMath>{\r\n        lastInEmptyRow         ? \"0\"         :\r\n        value.equals(zero)     ? \"\"          : \r\n        value.equals(one)      ? label       :\r\n        value.equals(minusOne) ? `-${label}` :\r\n        `${toLatex(value.abs(), useMixed, useDecimal)} ${label}`\r\n      }</InlineMath>\r\n    </td>\r\n  ) : (\r\n    <>\r\n      <td className=\"operator\">\r\n        <InlineMath>{\r\n          value.equals(zero)      ? \"\"  : \r\n          value.compare(zero) < 0 ? \"-\" :\r\n          !firstNonZero           ? \"+\" : \"\"\r\n        }</InlineMath>\r\n      </td>\r\n      <td>\r\n        <InlineMath>{\r\n          lastInEmptyRow          ? \"0\"   :\r\n          value.equals(zero)      ? \"\"    :\r\n          value.abs().equals(one) ? label : \r\n          `${toLatex(value.abs(), useMixed, useDecimal)} ${label}`\r\n        }</InlineMath>\r\n      </td>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function ProgramDisplay({program, useDecimal, useMixed}) {\r\n  // console.log(program);\r\n  function getFirstNonZeroIndex(arr) {\r\n    return arr.map(v => !v.equals(zero)).indexOf(true);\r\n  }\r\n  const isDual = program.isDual()\r\n  const showPrimal = !isDual;\r\n  const isEquality = program.isEquality();\r\n  const firstNonZero = showPrimal ?\r\n    range(program.m).map(i => getFirstNonZeroIndex(program.A[i])) :\r\n    range(program.n).map(j => \r\n      getFirstNonZeroIndex(range(program.m).map(i => program.A[i][j])));\r\n  const firstNonZeroInTopRow = getFirstNonZeroIndex(showPrimal ? program.c : program.b);\r\n  return (\r\n    <table className=\"program-display\">\r\n      <tbody>\r\n        <tr>\r\n          <td><InlineMath>{showPrimal ? \"max\" : \"min\"}</InlineMath></td>\r\n          {range(showPrimal ? program.n : program.m).map(i =>\r\n            <Monomial\r\n              key={i}\r\n              value={showPrimal ? program.c[i] : program.b[i]}\r\n              first={i === 0}\r\n              label={program.labels[i]}\r\n              firstNonZero={i === firstNonZeroInTopRow}\r\n              lastInEmptyRow={i === (showPrimal ? program.n : program.m) - 1 \r\n                              && firstNonZeroInTopRow === -1}\r\n              useDecimal={useDecimal}\r\n              useMixed={useMixed}\r\n            />\r\n          )}\r\n        </tr>\r\n        {range(showPrimal ? program.m : program.n).map(i =>\r\n          <tr key={i}>\r\n            <td></td>\r\n            {range(showPrimal ? program.n : program.m).map(j =>\r\n              <Monomial\r\n                key={j}\r\n                value={showPrimal ? program.A[i][j] : program.A[j][i]}\r\n                first={j === 0}\r\n                label={program.labels[j]}\r\n                firstNonZero={j === firstNonZero[i]}\r\n                lastInEmptyRow={j === (showPrimal ? program.n : program.m) - 1 \r\n                                && firstNonZero[i] === -1}\r\n                useDecimal={useDecimal}\r\n                useMixed={useMixed}\r\n              />\r\n            )}\r\n            <td><InlineMath>{isDual ? \"\\\\geq\" : isEquality ? \"=\" : \"\\\\geq\"}</InlineMath></td>\r\n            <td>\r\n              <InlineMath>\r\n                {toLatex(showPrimal ? program.b[i] : program.c[i], useMixed, useDecimal)}\r\n              </InlineMath>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {program.form === \"equality_dual\" ? null :\r\n        <tr>\r\n          <td colSpan={showPrimal ? 2 * program.n : 2 * program.m}>\r\n            <InlineMath>\r\n              {program.labels.join(\", \")}\r\n            </InlineMath>\r\n          </td>\r\n          <td><InlineMath>\\geq</InlineMath></td>\r\n          <td><InlineMath>0</InlineMath></td>\r\n        </tr>}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport function SlackForm({tableau, useDecimal, useMixed}) {\r\n  const nonBasicColumns = range(tableau.columns - 1).filter(i => !tableau.isBase[i]);\r\n  return (\r\n    <table className=\"program-display\">\r\n      <tbody>\r\n        <tr>\r\n          <td><InlineMath>z</InlineMath></td>\r\n          <td><InlineMath>=</InlineMath></td>\r\n          <td><InlineMath>{toLatex(tableau.tableau[0][tableau.columns-1], useMixed, useDecimal)}</InlineMath></td>\r\n          {nonBasicColumns.map(i =>\r\n            <Monomial\r\n              key={i}\r\n              value={tableau.tableau[0][i].neg()}\r\n              label={tableau.primalLabels[i]}\r\n              useDecimal={useDecimal}\r\n              useMixed={useMixed}\r\n            />\r\n          )}\r\n        </tr>\r\n        {range(tableau.m).map(i =>\r\n          <tr key={i}>\r\n            <td><InlineMath>{tableau.baseVariables[i] >= 0 ? tableau.primalLabels[tableau.baseVariables[i]] : \"0\"}</InlineMath></td>\r\n            <td><InlineMath>=</InlineMath></td>\r\n            <td><InlineMath>{tableau.tableau[i+1][tableau.columns-1].toLatex()}</InlineMath></td>\r\n            {nonBasicColumns.map(j =>\r\n              <Monomial\r\n                key={j}\r\n                value={tableau.tableau[i+1][j].neg()}\r\n                label={tableau.primalLabels[j]}\r\n                useDecimal={useDecimal}\r\n                useMixed={useMixed}\r\n              />\r\n            )}\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { InlineMath } from 'react-katex'\r\nimport Switch from \"react-switch\";\r\nimport { Pane, MultiPane, SplitPane } from './Layout'\r\nimport { range, copyArr, toLatex, flipSelection, isAllowedToSelect } from './utils'\r\nimport { getStateFromProgram } from './SimplexState'\r\nimport { ProgramDisplay, SlackForm } from './ProgramDisplay'\r\nimport { TableauDisplay } from './TableauDisplay'\r\nimport './Tableau.scss'\r\nimport './Input.scss'\r\n\r\nfunction SolutionDisplay({\r\n  title,\r\n  labels, \r\n  solution, \r\n  toShow = solution.length, \r\n  feasible, \r\n  useDecimal = true, \r\n  useMixed = false,\r\n}) {\r\n  return (\r\n    <div className=\"solution\">\r\n      <div className=\"solution-header\">{title} \r\n        {feasible ?\r\n          <span colSpan={toShow} className=\"highlight-pos\">Feasible</span> :\r\n          <span colSpan={toShow} className=\"highlight-neg\">Infeasible</span>\r\n        }\r\n      </div>\r\n      <div className=\"inner\">\r\n        <table className=\"solution-table\">\r\n          <tbody>\r\n            <tr>\r\n              {range(toShow).map(i => \r\n                <td key={i}><InlineMath>{labels[i]}</InlineMath></td>\r\n              )}\r\n            </tr>\r\n            <tr>\r\n              {range(toShow).map(i => \r\n                <td key={i}><InlineMath>{toLatex(solution[i], useMixed, useDecimal)}</InlineMath></td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SelectSetting({name, description, currentValue, options, onChange}) {\r\n  return (\r\n    <div className=\"setting\">\r\n      <select \r\n        className=\"setting-select\"\r\n        name={name}\r\n        value={currentValue}\r\n        onChange={e => onChange(e.target.value)}\r\n      >\r\n        {options.map((option, i) =>\r\n          <option \r\n            key={i}\r\n            value={option.value}\r\n          >\r\n            {option.label}\r\n          </option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SwitchSetting({name, description, currentValue, onChange, color}) {\r\n  return (\r\n    <div className=\"setting\">\r\n      <div className=\"switch\">\r\n        <Switch \r\n          id={name}\r\n          height={25}\r\n          width={50}\r\n          onChange={val => onChange(val)} \r\n          onColor={color}\r\n          checked={currentValue}\r\n        />\r\n      </div>\r\n      <label \r\n        htmlFor={name}\r\n        className=\"description\"\r\n      >\r\n        {description}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Settings({settings, setSetting, availablePivots}) {\r\n  return (\r\n    <div id=\"settings\">\r\n      <div className=\"setting-pivot\">\r\n        <div className=\"header\">Suggested Pivots</div>\r\n        <SelectSetting \r\n          name=\"highlighted_pivot\"\r\n          description=\"Suggested\"\r\n          currentValue={settings.highlightedPivots}\r\n          options={Object.entries(availablePivots).map(s => ({ value: s[0], label: s[1].description }))}\r\n          onChange={newValue => setSetting(\"highlightedPivots\", newValue)}\r\n        />\r\n      </div>\r\n      <div className=\"setting-base\">\r\n        <div className=\"header\">Base columns</div>\r\n        <SwitchSetting \r\n          name=\"highlight_base\"\r\n          color=\"#88c5ff\"\r\n          description=\"Highlight base columns\"\r\n          currentValue={settings.highlightBase}\r\n          onChange={newValue => setSetting(\"highlightBase\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"show_base\"\r\n          color=\"#88c5ff\"\r\n          description=\"Show base columns\"\r\n          currentValue={settings.showBase}\r\n          onChange={newValue => setSetting(\"showBase\", newValue)}\r\n        />\r\n      </div>\r\n      <div className=\"setting-other\">\r\n        <div className=\"header\">Other settings</div>\r\n        <SwitchSetting \r\n          name=\"highlight_invariants\"\r\n          color=\"#6cd875\"\r\n          description=\"Highlight invariants\"\r\n          currentValue={settings.highlightInvariants}\r\n          onChange={newValue => setSetting(\"highlightInvariants\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"use_decimal\"\r\n          color=\"#6cd875\"\r\n          description=\"Use decimal fractions\"\r\n          currentValue={settings.useDecimal}\r\n          onChange={newValue => setSetting(\"useDecimal\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"use_mixed\"\r\n          color=\"#6cd875\"\r\n          description=\"Use mixed fractions\"\r\n          currentValue={settings.useMixed}\r\n          onChange={newValue => setSetting(\"useMixed\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"show_disabled\"\r\n          color=\"#6cd875\"\r\n          description=\"Darken cells where pivot cannot be done\"\r\n          currentValue={settings.showDisabled}\r\n          onChange={newValue => setSetting(\"showDisabled\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"objective_at_bottom\"\r\n          color=\"#6cd875\"\r\n          description=\"Display objective function row at the bottom\"\r\n          currentValue={settings.showObjectiveBottom}\r\n          onChange={newValue => setSetting(\"showObjectiveBottom\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"b_column_on_left\"\r\n          color=\"#6cd875\"\r\n          description=\"Display the b column on the left\"\r\n          currentValue={settings.showBColumnsLeft}\r\n          onChange={newValue => setSetting(\"showBColumnsLeft\", newValue)}\r\n        />\r\n        <SwitchSetting \r\n          name=\"slack_on_left\"\r\n          color=\"#6cd875\"\r\n          description=\"Display the slack variables on the left\"\r\n          currentValue={settings.showSlackLeft}\r\n          onChange={newValue => setSetting(\"showSlackLeft\", newValue)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InteractiveTableau({initialProgram, onStartOver}) {\r\n  const [state, setState] = useState({\r\n    stateHistory: [getStateFromProgram(initialProgram)],\r\n    index: 0,\r\n    settings: {\r\n      highlightedPivots: \"bland_primal\",\r\n      highlightBase: true,\r\n      showBase: true,\r\n      highlightInvariants: true,\r\n      useDecimal: true,\r\n      useMixed: false,\r\n      showDisabled: true,\r\n      showObjectiveBottom: false,\r\n      showBColumnsLeft: false,\r\n      showSlackLeft: false,\r\n    },\r\n    selectedProgram: null,\r\n    currentTransition: null\r\n  });\r\n\r\n  const currentTableau = state.stateHistory[state.index]; \r\n  let highlightedPivots = state.settings.highlightedPivots;\r\n  if (!(highlightedPivots in currentTableau.suggestedPivots)) {\r\n    highlightedPivots = currentTableau.defaultSuggestion;\r\n    setSetting(\"highlightedPivots\", currentTableau.defaultSuggestion);\r\n  }\r\n\r\n  // console.log(state);\r\n  // console.log(currentTableau);\r\n\r\n  function goToPrevious() { setState({ ...state, index: state.index - 1, currentTransition: null }); }\r\n  function goToNext()     { setState({ ...state, index: state.index + 1, currentTransition: null }); }\r\n\r\n  function appendTableau(newTab) {\r\n    setState({\r\n      ...state,\r\n      stateHistory: state.stateHistory.slice(0, state.index + 1).concat(newTab),\r\n      index: state.index + 1,\r\n      currentTransition: null\r\n    })\r\n  }\r\n\r\n  function handleCellClick(i, j) {\r\n    if (state.currentTransition === null) {\r\n      if (currentTableau.canPivot(i, j))\r\n        appendTableau(currentTableau.pivot(i, j));  \r\n    } else {\r\n      if (isAllowedToSelect(i, j, state.currentTransition.selection)) {\r\n        setState({\r\n          ...state,\r\n          currentTransition: {\r\n            ...state.currentTransition,\r\n            selection: flipSelection(i, j, state.currentTransition.selection)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function makeTransition(transition) {\r\n    if (transition.args === \"none\")\r\n      appendTableau(transition.getNewState());\r\n    else {\r\n      setState({\r\n        ...state,\r\n        currentTransition: {\r\n          getNewState: transition.getNewState,\r\n          validateArgs: transition.validateArgs,\r\n          prompt: transition.prompt,\r\n          selection: {\r\n            type: transition.args,\r\n            selected: copyArr(transition.defaultSelection),\r\n            allowed: transition.allowed,\r\n          },\r\n          errorMessage: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function finishTransition() {\r\n    const args = state.currentTransition.selection.selected;\r\n    const [correct, error] = state.currentTransition.validateArgs(args);\r\n    if (correct) {\r\n      appendTableau(state.currentTransition.getNewState(args));\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        currentTransition: {\r\n          ...state.currentTransition,\r\n          errorMessage: error\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  function cancelTransition() {\r\n    setState({\r\n      ...state,\r\n      currentTransition: null,\r\n    })\r\n  }\r\n\r\n  function selectAll() {\r\n    setState({\r\n      ...state,\r\n      currentTransition: {\r\n        ...state.currentTransition,\r\n        selection: {\r\n          ...state.currentTransition.selection,\r\n          selected: copyArr(state.currentTransition.selection.allowed)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  function setSetting(setting, value) {\r\n    setState({\r\n      ...state,\r\n      settings: {\r\n        ...state.settings,\r\n        [setting]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"inner-wrapper\">\r\n      <div id=\"tab-and-controls\">\r\n        <div id=\"controls\">\r\n          <button\r\n            onClick={goToPrevious}\r\n            disabled={state.index === 0}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span id=\"counter\">{`${state.index+1} / ${state.stateHistory.length}`}</span>\r\n          <button\r\n            onClick={goToNext}\r\n            disabled={state.index === state.stateHistory.length - 1}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n        <TableauDisplay\r\n          state={currentTableau}\r\n          onCellClick={handleCellClick}\r\n          showDisabled={true}\r\n          selection={state.currentTransition === null ? null : state.currentTransition.selection}\r\n          {...state.settings}\r\n          highlightedPivots={highlightedPivots}\r\n        />\r\n        <div id=\"message\">\r\n          {state.currentTransition === null ?\r\n          (<>\r\n            {currentTableau.getStatusMessage()}\r\n            {currentTableau.transitions.map((transition, i) => \r\n              <button \r\n                key={i} \r\n                className=\"inline-button\"\r\n                onClick={() => makeTransition(transition)}>\r\n                  {transition.label}\r\n              </button>\r\n            )}\r\n          </>) :\r\n          (<>\r\n            {state.currentTransition.prompt}\r\n            <button onClick={finishTransition} className=\"inline-button\">Done</button>\r\n            <button onClick={selectAll} className=\"inline-button\">Select All</button>\r\n            <button onClick={cancelTransition} className=\"inline-button\">Cancel</button>\r\n            {state.currentTransition.errorMessage === null ? null :\r\n              <p className=\"highlight-neg\">{state.currentTransition.errorMessage}</p>\r\n            }\r\n          </>)\r\n          }\r\n        </div>\r\n      </div>\r\n      <div id=\"sidebar\">\r\n        <Settings\r\n          settings={{...state.settings, highlightedPivots: highlightedPivots}}\r\n          availablePivots={currentTableau.suggestedPivots}\r\n          setSetting={setSetting}\r\n        />\r\n        <button onClick={onStartOver} id=\"start-over\">Start over with a new program</button>\r\n      </div>\r\n      <SplitPane>\r\n        <SolutionDisplay\r\n          title={\"Primal solution\"}\r\n          labels={currentTableau.primalLabels}\r\n          solution={currentTableau.primalSolution}\r\n          feasible={currentTableau.primalFeasible}\r\n          {...state.settings}\r\n        />\r\n        <SolutionDisplay\r\n          title={\"Dual solution\"}\r\n          labels={currentTableau.dualLabels}\r\n          solution={currentTableau.dualSolution}\r\n          feasible={currentTableau.dualFeasible}\r\n          {...state.settings}\r\n        />\r\n      </SplitPane>\r\n      <MultiPane\r\n        defaultChoice={currentTableau.defaultProgram}\r\n        chosen={state.selectedProgram}\r\n        setChosen={choice => setState({...state, selectedProgram: choice})}\r\n      >\r\n        {currentTableau.programs.map(({name, program}, i) =>\r\n          <Pane \r\n            key={i}\r\n            name={name}\r\n            label={name}\r\n          >\r\n            <ProgramDisplay\r\n              program={program}\r\n              {...state.settings}\r\n            />\r\n          </Pane>\r\n        )}\r\n        {currentTableau.isEquality ? null :\r\n        <Pane\r\n          name=\"slack\"\r\n          label=\"Slack Form\"\r\n        >\r\n          <SlackForm\r\n            tableau={currentTableau}\r\n            {...state.settings}\r\n          />\r\n        </Pane>}\r\n      </MultiPane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { InteractiveTableau };","import './App.scss';\r\nimport { useState } from 'react';\r\nimport { ProgramInput } from './Input'\r\nimport { InteractiveTableau } from './InteractiveTableau'\r\n\r\nfunction App() {\r\n  const [initialProgram, setInitialProgram] = useState(null);\r\n  if (initialProgram === null) {\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <ProgramInput \r\n          onFinish={(program) => setInitialProgram(program)}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <InteractiveTableau\r\n          initialProgram={initialProgram}\r\n          onStartOver={() => setInitialProgram(null)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}